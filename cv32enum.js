// BASEUNITTYPE
const BASEUNIT_INCHES1000 = 0;
const BASEUNIT_INCHES10 = 1;
const BASEUNIT_CM1000 = 2;
const BASEUNIT_CM10 = 3;

// APPBASEUNITTYPE
const APP_BASEUNIT_INCHES = 0;
const APP_BASEUNIT_CENTIMETERS = 1;

// DOCUMENTTYPE
const DOCUMENT_CLIENT = 0;
const DOCUMENT_LIBRARY = 1;
const DOCUMENT_KNOWLEDGELIBRARY = 2;
const DOCUMENT_STANDALONE = 3;

// MESSAGEBOXTYPE
const MESSAGE_OK = 0;
const MESSAGE_OKCANCEL = 1;
const MESSAGE_YESNO = 2;
const MESSAGE_YESNOCANCEL = 3;
const MESSAGE_YESNOALLCANCEL = 4;

// MESSAGEBOXRESULT
const MESSAGE_RESULT_OK = 1;
const MESSAGE_RESULT_CANCEL = 2;
const MESSAGE_RESULT_YES = 6;
const MESSAGE_RESULT_NO = 7;
const MESSAGE_RESULT_YESALL = 20;
const MESSAGE_RESULT_NOALL = 21;

// CVCOLORS
const BLACK = 0;
const LTGRAY = 0xc0c0c0;
const MEDGRAY = 0xa0a0a0;
const DKGRAY = 0x808080;
const RED = 0xff;
const BLUE = 0xff3030;
const LIME = 0xff00;
const MAROON = 0x84;
const GREEN = 0x8200;
const OLIVE = 0x8284;
const NAVY = 0x840000;
const PURPLE = 0x840084;
const TEAL = 0x848200;
const YELLOW = 0xffff;
const FUSCHIA = 0xff00ff;
const AQUA = 0xffff00;
const WHITE = 0xffffff;

// OLDCVCOLORS
const COLOR_BLACK = 0;
const COLOR_LTGRAY = 0xc0c0c0;
const COLOR_MEDGRAY = 0xa0a0a0;
const COLOR_DKGRAY = 0x808080;
const COLOR_RED = 0xff;
const COLOR_BLUE = 0xff3030;
const COLOR_LIME = 0xff00;
const COLOR_MAROON = 0x84;
const COLOR_GREEN = 0x8200;
const COLOR_OLIVE = 0x8284;
const COLOR_NAVY = 0x840000;
const COLOR_PURPLE = 0x840084;
const COLOR_TEAL = 0x848200;
const COLOR_YELLOW = 0xffff;
const COLOR_FUSCHIA = 0xff00ff;
const COLOR_AQUA = 0xffff00;
const COLOR_WHITE = 0xffffff;

// OBJECTTYPEID
const ID_CELL = 1;
const ID_PAGE_NUMBER = 3;
const ID_LINE = 4;
const ID_NOTE_NUMBER = 5;
const ID_PAGE_XREF = 6;
const ID_PICTURE = 8;
const ID_HARD_HYPHEN = 10;
const ID_GRAPH = 11;
const ID_PAGEBREAK = 12;
const ID_OLE = 13;
const ID_ANNOTATION = 15;
const TYPEID_ANYOBJECT = 0;
const TYPEID_CELL = 1;
const TYPEID_PAGE = 3;
const TYPEID_LINE = 4;
const TYPEID_NOTENUM = 5;
const TYPEID_PAGEXREF = 6;
const TYPEID_PICTURE = 8;
const TYPEID_HARDHYPHEN = 10;
const TYPEID_GRAPH = 11;
const TYPEID_PAGEBREAK = 12;
const TYPEID_OLE = 13;
const TYPEID_ANNOTATION = 15;
const TYPEID_PDF_EMBED = 16;
const TYPEID_EXTERNAL_DOC = 16;
const TYPEID_HYPERLINKS = 17;

// ROUNDTO
const ROUND_1 = 0;
const ROUND_1000 = 1;
const ROUND_1000000 = 2;
const ROUND_1000000000 = 3;
const ROUND_10000 = 4;
const ROUND_100000000 = 5;

// CELLTYPE
const TYPE_NUMERIC = 0;
const TYPE_ALPHA = 1;
const TYPE_DATE = 2;
const TYPE_CHECKBOX = 3;
const TYPE_RADIOBUTTON = 4;
const TYPE_BUTTON = 5;

// UNDERLINETYPE
const UNDERLINE_NONE = 0;
const UNDERLINE_SINGLE = 1;
const UNDERLINE_DOUBLE = 2;
const UNDERLINE_SINGLEDESCENDED = 3;
const UNDERLINE_DOUBLEDESCENDED = 4;
const UNDERLINE_SINGLE2 = 5;
const UNDERLINE_DOUBLE2 = 6;
const UNDERLINE_SINGLEDESCENDED2 = 7;
const UNDERLINE_DOUBLEDESCENDED2 = 8;
const UNDERLINE_USER_1 = 9;
const UNDERLINE_USER_2 = 10;
const UNDERLINE_USER_3 = 11;
const UNDERLINE_USER_4 = 12;
const UNDERLINE_USER_5 = 13;
const UNDERLINE_USER_6 = 14;
const UNDERLINE_USER_7 = 15;

// UNDERLINEDEFINITIONSINDEX
const UNDERLINEDEFINITIONS_MININDEX = 0;
const UNDERLINE_DEF_SINGLE = 0;
const UNDERLINE_DEF_DOUBLE = 1;
const UNDERLINE_DEF_SINGLEDESCENDED = 2;
const UNDERLINE_DEF_DOUBLEDESCENDED = 3;
const UNDERLINE_DEF_SINGLE2 = 4;
const UNDERLINE_DEF_DOUBLE2 = 5;
const UNDERLINE_DEF_SINGLEDESCENDED2 = 6;
const UNDERLINE_DEF_DOUBLEDESCENDED2 = 7;
const UNDERLINE_DEF_USER_1 = 8;
const UNDERLINE_DEF_USER_2 = 9;
const UNDERLINE_DEF_USER_3 = 10;
const UNDERLINE_DEF_USER_4 = 11;
const UNDERLINE_DEF_USER_5 = 12;
const UNDERLINE_DEF_USER_6 = 13;
const UNDERLINE_DEF_USER_7 = 14;
const UNDERLINEDEFINITIONS_MAXINDEX = 14;

// UNDERLINEDEFINITIONTYPE
const UNDERLINETYPE_SINGLE = 0;
const UNDERLINETYPE_DOUBLE = 1;
const UNDERLINETYPE_TRIPLE = 2;

// UNDERLINESTYLE
const UNDERLINE_SOLID = 0;
const UNDERLINE_DASH = 1;
const UNDERLINE_DOTTED = 2;
const UNDERLINE_FINEDOTS = 3;

// UNDERLINEINDEX
const FIRST_UNDERLINE = 0;
const SECOND_UNDERLINE = 1;
const THIRD_UNDERLINE = 2;

// WIDTHTYPE
const WIDTH_VARIABLE = 0;
const CELL_WIDTH_VARIABLE = 0;
const WIDTH_EXACT = 1;
const CELL_WIDTH_EXACT = 1;
const WIDTH_ATLEAST = 2;
const CELL_WIDTH_ATLEAST = 2;
const WIDTH_ATMOST = 3;
const CELL_WIDTH_ATMOST = 3;
const CELL_WIDTH_COLUMN = 4;

// HEIGHTTYPE
const HEIGHT_VARIABLE = 0;
const CELL_HEIGHT_VARIABLE = 0;
const HEIGHT_EXACT = 1;
const CELL_HEIGHT_EXACT = 1;
const HEIGHT_ATLEAST = 2;
const CELL_HEIGHT_ATLEAST = 2;
const HEIGHT_ATMOST = 3;
const CELL_HEIGHT_ATMOST = 3;

// PARAHEIGHTTYPE
const PARA_HEIGHT_AUTO = 0;
const PARA_HEIGHT_ATLEAST = 1;
const PARA_HEIGHT_ATMOST = 2;
const PARA_HEIGHT_EXACT = 3;

// BOOLFLAG
const FLAG_TRUE = 1;
const FLAG_FALSE = 0;

// FONTWIDTH
const FW_DONTCARE = 0;
const FW_THIN = 100;
const FW_EXTRALIGHT = 200;
const FW_ULTRALIGHT = 200;
const FW_LIGHT = 300;
const FW_NORMAL = 400;
const FW_REGULAR = 400;
const FW_MEDIUM = 500;
const FW_SEMIBOLD = 600;
const FW_DEMIBOLD = 600;
const FW_BOLD = 700;
const FW_EXTRABOLD = 800;
const FW_ULTRABOLD = 800;
const FW_HEAVY = 900;
const FW_BLACK = 900;

// VERTALIGN
const VERT_DEFAULT = 0;
const VERT_TOP = 1;
const VERT_CENTER = 2;
const VERT_BOTTOM = 3;
const VERT_JUSTIFY = 4;

// HORZALIGN
const HORZ_DEFAULT = 0;
const HORZ_LEFT = 1;
const HORZ_CENTER = 2;
const HORZ_RIGHT = 3;
const HORZ_JUSTIFY = 4;
const HORZ_FILL = 5;

// ORIENTATION
const ORIENT_LEFTRIGHT = 0;
const ORIENT_TBRSU = 2;
const ORIENT_BT = 2;
const ORIENT_TB = 3;

// RESERVESPACE
const RESERVESPACE_DEFAULT = 0;
const RESERVESPACE_SPACE = 1;
const RESERVESPACE_NONE = 2;

// SHADINGSPEC
const SHADING_DEFAULT = 0;
const SHADING_ON = 1;
const SHADING_OFF = 2;

// UNDERLINESPEC
const UNDERLINE_DEFAULT = 0;
const UNDERLINE_ON = 1;
const UNDERLINE_OFF = 2;

// POSITIVEASTYPE
const POSITIVEAS_POS = 0;
const POSITIVEAS_DR = 1;
const POSITIVEAS_NEG = 3;
const POSITIVEAS_BLANK = 4;

// NEGATIVEASTYPE
const NEGATIVEAS_BRACKET = 0;
const NEGATIVEAS_NEG = 1;
const NEGATIVEAS_CR = 2;
const NEGATIVEAS_RBRACKET = 4;
const NEGATIVEAS_POS = 5;
const NEGATIVEAS_BLANK = 6;
const NEGATIVEAS_TRIANGLE = 7;

// ZEROASTYPE
const ZEROAS_DASH = 0;
const ZEROAS_ZERO = 1;
const ZEROAS_NIL = 2;
const ZEROAS_BLANK = 3;
const ZEROAS_NA = 4;
const ZEROAS_LCNIL = 5;
const ZEROAS_DASHES = 6;
const ZEROAS_NIL2 = 7;
const ZEROAS_PLACEHLDTXT = 8;

// SHADETYPE
const SHADE_NONE = 0;
const SHADE_SDEFAULT = 0;
const SHADE_SOLID = 1;
const SHADE_SBDIAG = 2;
const SHADE_SDIAGFWD = 2;
const SHADE_SCROSS = 3;
const SHADE_SDCROSS = 4;
const SHADE_SFDIAG = 5;
const SHADE_SDIAGBACK = 5;
const SHADE_SHORIZ = 6;
const SHADE_SVERT = 7;
const SHADE_TRANSPARENT = 8;
const SHADE_DEFAULT = 9;
const SHADE_SNONE = 9;

// ROLLFORWARDTYPE
const ROLLFORWARD_NONE = 0;
const ROLLFORWARD_DIRECT = 1;
const ROLLFORWARD_RELATIVE = 2;
const ROLLFORWARD_EQUATION = 3;
const ROLLFORWARD_RELATIVECOL = 4;
const ROLLFORWARD_MAXVALUE = 4;

// LABELCELLTYPE
const LABEL_UNRESTRICTED = 0;
const LABEL_POSTAL = 1;
const LABEL_YESNO = 2;
const LABEL_XONLY = 3;
const LABEL_ZIP = 4;

// CHECKCELLTYPE
const CHECKTYPE_NORMAL = 0;
const CHECKTYPE_PLUSMINUS = 1;
const CHECKTYPE_FOLDER = 2;
const CHECKTYPE_CUSTOM = 3;
const CHECKTYPE_DYNAMIC = 4;

// RADIOCELLTYPE
const RADIOTYPE_NORMAL = 0;
const RADIOTYPE_PLUSMINUS = 1;
const RADIOTYPE_FOLDER = 2;
const RADIOTYPE_CUSTOM = 3;
const RADIOTYPE_DYNAMIC = 4;

// BUTTONCELLTYPE
const BUTTONTYPE_TEXT = 0;
const BUTTONTYPE_BITMAP = 1;
const BUTTONTYPE_CUSTOM = 1;
const BUTTONTYPE_DYNAMIC = 2;

// BUTTONBITMAPID
const BUTTONBITMAP_LEFTARROWUP = 0;
const BUTTONBITMAP_LEFTARROWDOWN = 1;
const BUTTONBITMAP_RIGHTARROWUP = 2;
const BUTTONBITMAP_RIGHTARROWDOWN = 3;
const BUTTONBITMAP_UPARROWUP = 4;
const BUTTONBITMAP_UPARROWDOWN = 5;
const BUTTONBITMAP_DOWNARROWUP = 6;
const BUTTONBITMAP_DOWNARROWDOWN = 7;
const BUTTONBITMAP_GRAPHUP = 8;
const BUTTONBITMAP_GRAPHDOWN = 9;
const BUTTONBITMAP_LIGHTBULBUP = 10;
const BUTTONBITMAP_LIGHTBULBDOWN = 11;
const BUTTONBITMAP_OPENBOOKUP = 12;
const BUTTONBITMAP_OPENBOOKDOWN = 13;
const BUTTONBITMAP_REDEXCLUP = 14;
const BUTTONBITMAP_REDEXCLDOWN = 15;
const BUTTONBITMAP_INFOUP = 16;
const BUTTONBITMAP_INFODOWN = 17;
const BUTTONBITMAP_FACEUP = 18;
const BUTTONBITMAP_FACEDOWN = 19;
const BUTTONBITMAP_SADFACEUP = 20;
const BUTTONBITMAP_SADFACEDOWN = 21;
const BUTTONBITMAP_QUESTIONUP = 22;
const BUTTONBITMAP_QUESTIONDOWN = 23;
const BUTTONBITMAP_CHECKUP = 24;
const BUTTONBITMAP_CHECKDOWN = 25;
const BUTTONBITMAP_ISOUP = 26;
const BUTTONBITMAP_ISODOWN = 27;
const BUTTONBITMAP_XUP = 28;
const BUTTONBITMAP_XDOWN = 29;
const BUTTONBITMAP_REDSQUAREDOWN = 30;
const BUTTONBITMAP_REDSQUAREUP = 31;
const BUTTONBITMAP_GREENSQUAREDOWN = 32;
const BUTTONBITMAP_GREENSQUAREUP = 33;
const BUTTONBITMAP_LOGODOWN = 34;
const BUTTONBITMAP_LOGOUP = 35;

// PARAGRAPHJUSTIFICATION
const JUST_LEFT = 0;
const JUST_FLUSH = 1;
const JUST_CENTER = 2;
const JUST_CENTRE = 2;
const JUST_RIGHT = 3;

// TOCSKIPTYPE
const TOC_SKIP_WHEN_PARA_SKIPPED = 0;
const TOC_SKIP_NEVER = 1;
const TOC_SKIP_USING_CONDITION = 2;

// SKIPRPINTTYPE
const SKIP_NEVER = 0;
const SKIP_NUMERICS_ZERO = 1;
const SKIP_CELLS_BLANK = 2;
const SKIP_ALWAYS = 3;
const SKIP_NOAPPLY = 4;
const SKIP_NUMERICS_ZERONOCONTROLS = 5;

// SECTSKIPTYPE
const SECTSKIP_NONE = 0;
const SECTSKIP_NUMERICS_ZERO = 1;
const SECTSKIP_CELLS_BLANK = 2;
const SECTSKIP_ALWAYS = 3;
const SECTSKIP_NUMERICS_ZERONOCONTROLS = 4;

// HIDEACTION
const ACTION_NEVER_HIDE = 0;
const ACTION_HIDE_IF_BUTTON = 1;
const ACTION_ALWAYS_HIDE = 2;
const ACTION_HIDE_IF_COND = 3;
const ACTION_NOAPPLY = 3;

// PARAGRAPHALIGN
const ALIGN_NONE = 0;
const ALIGN_AT = 1;
const ALIGN_WITH = 2;

// DIAGNOSTICRUNFLAGS
const DGNRUN_PRECALC = 1;
const DGNRUN_PREPRINT = 4;
const DGNRUN_ONLOADING = 16;
const DGNRUN_ONSAVING = 8;
const DGNRUN_INFORMLIST = 32;
const DGNRUN_INDESIGNLIST = 64;

// DIAGNOSTICFAILFLAGS
const DGNFAIL_SHOWMESSAGE = 1;
const DGNFAIL_NOPRINTING = 2;

// RENUMBERCELLFLAGS
const RENUMBER_ALLCELLS = 1;
const RENUMBER_REFCALCS = 2;
const RENUMBER_REFDIAG = 4;
const RENUMBER_EXISTSCALC = 8;
const RENUMBER_EXISTSDATA = 16;
const RENUMBER_EXISTSATTR = 32;
const RENUMBER_REREF_ALL = 64;
const RENUMBER_REREF_NONE = 128;
const RENUMBER_REREF_CURPARA = 512;
const RENUMBER_REFHIDEALL = 64;
const RENUMBER_REFHIDECURPARA = 128;
const RENUMBER_REFHIDEENONE = 256;

// TABLECOLUMNTYPE
const COLTYPE_GENERAL = 0;
const COLTYPE_GENERAL_MOD = 1;
const COLTYPE_NUMERIC = 2;
const COLTYPE_FIXED_ALPHA = 3;
const COLTYPE_VARIABLE_APHA = 4;
const COLTYPE_VARIABLE_ALPHA = 4;

// TABLECOLUMNREPEATTYPE
const COLUMN_REPEAT_NO_REPEAT = 1;
const COLUMN_REPEAT_EVERY_PAGE = 2;
const COLUMN_REPEAT_ODD_PAGES = 3;
const COLUMN_REPEAT_FIRST_AND_EVEN_PAGES = 4;
const COLUMN_REPEAT_EVERY_FOURTH_PAGE = 5;
const COLUMN_REPEAT_FIRST_AND_EVERY_SECOND_EVEN_PAGE = 6;

// TABLECOLUMNBREAKTYPE
const COLUMN_BREAK_NO_BREAK = 1;
const COLUMN_BREAK_VERTICAL_BREAK = 2;
const COLUMN_BREAK_PAGE_BREAK = 3;

// TABLEBORDERPOSITION
const TABLEBORDER_ALL = 0;
const TABLEBORDER_LEFT = 1;
const TABLEBORDER_RIGHT = 2;
const TABLEBORDER_TOP = 3;
const TABLEBORDER_BOTTOM = 4;
const TABLEBORDER_VINTERIOR = 5;
const TABLEBORDER_HINTERIOR = 6;

// TABLEBORDERSTYLE
const TABLEBORDER_NONE = 0;
const TABLEBORDER_SINGLE = 1;
const TABLEBORDER_SHORT = 2;
const TABLEBORDER_MEDIUM = 3;
const TABLEBORDER_LONG = 4;
const TABLEBORDER_DOUBLE = 5;

// SECTIONSORTORDER
const SECTIONSORT_ASCENDING = 1;
const SECTIONSORT_DESCENDING = 0;
const SECTIONSORT_MANUAL = 2;

// TABLESORTORDER
const TABLESORT_ASCENDING = 0;
const TABLESORT_DESCENDING = 1;
const TABLESORT_MANUAL = 2;

// SCRIPTTYPE
const SCRIPTTYPE_SYSTEM = 1;
const SCRIPTTYPE_DOCUMENT = 2;
const SCRIPTTYPE_GLOBAL = 3;

// SCRIPTLANGUAGE
const SCRIPT_JAVA = 0;
const SCRIPT_VBSCRIPT = 1;

// PAPERSIZES
const PAPER_LETTER = 1;
const PAPER_LETTERSMALL = 2;
const PAPER_TABLOID = 3;
const PAPER_LEDGER = 4;
const PAPER_LEGAL = 5;
const PAPER_STATEMENT = 6;
const PAPER_EXECUTIVE = 7;
const PAPER_A3 = 8;
const PAPER_A4 = 9;
const PAPER_A4SMALL = 10;
const PAPER_A5 = 11;
const PAPER_B4 = 12;
const PAPER_B5 = 13;
const PAPER_FOLIO = 14;
const PAPER_QUARTO = 15;
const PAPER_10X14 = 16;
const PAPER_11X17 = 17;
const PAPER_NOTE = 18;
const PAPER_ENV_9 = 19;
const PAPER_ENV_10 = 20;
const PAPER_ENV_11 = 21;
const PAPER_ENV_12 = 22;
const PAPER_ENV_14 = 23;
const PAPER_CSHEET = 24;
const PAPER_DSHEET = 25;
const PAPER_ESHEET = 26;
const PAPER_ENV_DL = 27;
const PAPER_ENV_C5 = 28;
const PAPER_ENV_C3 = 29;
const PAPER_ENV_C4 = 30;
const PAPER_ENV_C6 = 31;
const PAPER_ENV_C65 = 32;
const PAPER_ENV_B4 = 33;
const PAPER_ENV_B5 = 34;
const PAPER_ENV_B6 = 35;
const PAPER_ENV_ITALY = 36;
const PAPER_ENV_MONARCH = 37;
const PAPER_ENV_PERSONAL = 38;
const PAPER_FANFOLD_US = 39;
const PAPER_FANFOLD_STD_GERMAN = 40;
const PAPER_FANFOLD_LGL_GERMAN = 41;

// PRINTORIENTATION
const PRINTER_PORTRAIT = 1;
const PRINTER_LANDSCAPE = 2;

// PRINTDOUBLESIDED
const PRINTER_DS_DEFAULT = 0;
const PRINTER_DS_NONE = 1;
const PRINTER_DS_HORIZONTAL = 2;
const PRINTER_DS_VERTICAL = 3;

// SECTIONBOXSIDE
const BOX_LEFT = 1;
const BOX_TOP = 2;
const BOX_RIGHT = 4;
const BOX_BOTTOM = 8;

// CELLDASHPOSITION
const DASHPOSITION_FROMLEFT = 0;
const DASHPOSITION_LEFTOFCENTER = 1;
const DASHPOSITION_RIGHTOFCENTER = 2;
const DASHPOSITION_FROMRIGHT = 3;

// SORTKEYTYPE
const SORTKEYTYPE_CALCULATION = 0;
const SORTKEYTYPE_PARAGRAPHTEXT = 1;

// INPUTDIALOG
const INPUTDIALOG_TEXT = 0;
const INPUTDIALOG_INTEGER = 1;
const INPUTDIALOG_LENGTH = 2;
const INPUTDIALOG_POINTS = 3;

// EXTDATATYPE
const EXTDATATYPE_INTERNAL = 0;
const EXTDATATYPE_CELLDATA = 1;
const EXTDATATYPE_FORMCELLDATA = 2;
const EXTDATATYPE_CELLDATASYS = 3;
const EXTDATATYPE_FORMCELLDATASYS = 4;
const EXTDATATYPE_CELLDATA_L = 5;
const EXTDATATYPE_FORMCELLDATA_L = 6;

// EXTDATAPOS
const EXTDATAPOS_CURRENT = 1;
const EXTDATAPOS_RECNO = 2;
const EXTDATAPOS_FILTER = 3;

// EXTDATACOPY
const EXTDATACOPY_NEVER = 0;
const EXTDATACOPY_ADD = 1;
const EXTDATACOPY_REPLACE = 2;
const EXTDATACOPY_REMOVE = 3;
const EXTDATACOPY_REPLACEOLD = 4;

// DOLLARPOSTION
const CURRENCYPOSITION_LEFT = 1;
const CURRENCYPOSITION_RIGHT = 2;

// DOLLARSYMBOL
const CURRENCYSYMBOL_DEFAULT = 0;

// VERTICALALIGNMENT
const VERTICAL_ALIGNMENT_TOP = 0;
const VERTICAL_ALIGNMENT_CENTER = 1;
const VERTICAL_ALIGNMENT_BOTTOM = 2;

// PARASPACINGNEW
const SPACING_SINGLE = 1;
const SPACING_ONEANDHALF = 2;
const SPACING_DOUBLE = 3;
const SPACING_ATLEAST = 4;
const SPACING_ATMOST = 5;
const SPACING_EXACTLY = 6;
const SPACING_MULTIPLE = 7;

// PERMISSIONINDEX
const PERM_MODIFY_CELL_CALCS = 0;
const PERM_MODIFY_CELL_LOGIC = 0;
const PERM_MODIFY_CELL_FORMAT = 1;
const PERM_MODIFY_CELL_ATTRIBUTES = 1;
const PERM_DELETE_CELL = 2;
const PERM_MODIFY_PARA_FORMAT = 3;
const PERM_MODIFY_PARA_CONTENTS = 4;
const PERM_MODIFY_PARA_SKIPS = 5;
const PERM_MODIFY_SECTION_SKIP = 6;
const PERM_MODIFY_SECTION_FORMAT = 7;
const PERM_MODIFY_ROUNDING = 8;
const PERM_MODIFY_TABLE_FORMAT = 9;
const PERM_MODIFY_TABLE_LOGIC = 10;
const PERM_INSERT_COLUMN = 11;
const PERM_DELETE_COLUMN = 12;
const PERM_MODIFY_COLUMN_FORMAT = 13;
const PERM_MODIFY_COLUMN_LOGIC = 14;
const PERM_INSERT_ROW = 15;
const PERM_DELETE_ROW = 16;
const PERM_MODIFY_ROW_FORMAT = 17;
const PERM_MODIFY_ROW_LOGIC = 18;
const PERM_MODIFY_CHARLEVERL_FORMAT = 19;
const PERM_APPLY_STYLE = 20;
const PERM_INSERT_KNOWLEDGELIBRARY = 21;
const PERM_INSERT_AUTOMATICTOC = 22;
const PERM_MODIFY_PAGE_BREAK = 23;
const PERM_MODIFY_CELLOPTIONS = 24;
const PERM_CONFIGURE_DIAGNOSTICS = 25;
const PERM_UPDATE_KNOWLEDGELIBRARY = 26;
const PERM_DELETE_KNOWLEDGELIBRARY = 27;
const PERM_INSERT_SUBDOCUMENT = 28;
const PERM_ALLOW_FULL_COPY = 29;
const PERM_MODIFY_PAGE_SETUP = 30;
const PERM_MODIFY_WIDE_TABLE = 31;
const PERM_RESIZE_SECTIONS = 32;
const PERM_MODIFY_XBRL_DIAGNOSTIC_LVL = 33;

// PERMISSIONINDEXRANGE
const PERM_INDEX_MIN = 0;
const PERM_INDEX_MAX = 33;

// PERMISSIONVALUE
const PERM_USE_DOC = -2;
const PERM_NOT_RESTRICTED = -1;
const PERM_LEVEL_ONE = 0;
const PERM_LEVEL_TWO = 1;
const PERM_LEVEL_THREE = 2;
const PERM_LEVEL_FOUR = 3;
const PERM_LEVEL_FIVE = 4;
const PERM_LEVEL_SIX = 5;
const PERM_LEVEL_SEVEN = 6;
const PERM_LEVEL_EIGHT = 7;
const PERM_LEVEL_NINE = 8;
const PERM_LEVEL_TEN = 9;
const PERM_PROHIBITED = 10;

// PROCESSSTATE
const DOC_STATE_NORMAL = 0;
const DOC_STATE_ROLLFORWARD = 1;
const DOC_STATE_COPYTEMPLATE = 2;
const DOC_STATE_PRINT = 3;
const DOC_STATE_EXPORTHTML = 4;
const DOC_STATE_NORMALFROMSCRIPT = 5;
const DOC_STATE_CONVERT = 6;
const DOC_STATE_DESIGNTIME = 7;
const DOC_STATE_VIEWTIME = 8;
const DOC_STATE_BACKGROUND = 9;
const DOC_STATE_GENERATEPDF = 10;
const DOC_STATE_INTECHECK = 11;
const DOC_STATE_CONVDLL = 12;
const DOC_STATE_COMPARE = 13;
const DOC_STATE_PREVIEW = 14;
const DOC_STATE_KL_UPDATE = 15;
const DOC_STATE_CLEANUP = 16;

// MODEACCESSIBILITY
const DOCMODE_ALWAYS_VIEWLOCKED = -1;
const DOCMODE_NOT_ACCESSIBLE = 0;
const DOCMODE_ALWAYS_ACCESSIBLE = 1;
const DOCMODE_ACCESS_LEVELONE = 2;
const DOCMODE_ACCESS_LEVELTWO = 3;
const DOCMODE_ACCESS_LEVELTHREE = 4;
const DOCMODE_ACCESS_LEVELFOUR = 5;
const DOCMODE_ACCESS_LEVELFIVE = 6;
const DOCMODE_ACCESS_LEVELSIX = 7;
const DOCMODE_ACCESS_LEVELSEVEN = 8;
const DOCMODE_ACCESS_LEVELEIGHT = 9;
const DOCMODE_ACCESS_LEVELNINE = 10;
const DOCMODE_ACCESS_LEVELTEN = 11;

// DEFAULTOPENDOCMODE
const DOCMODE_OPEN_DEFAULT = -1;
const DOCMODE_OPEN_FORM = 0;
const DOCMODE_OPEN_FORMENABLEDEDIT = 1;
const DOCMODE_OPEN_DESIGN = 2;

// SYSTEMSCRIPTINDEX
const SYS_SCRIPT_ONOPENING = 0;
const SYS_SCRIPT_ONSAVING = 1;
const SYS_SCRIPT_BEFORERECALC = 2;
const SYS_SCRIPT_AFTERRECALC = 3;
const SYS_SCRIPT_ONCLOSING = 4;
const SYS_SCRIPT_ONACTIVATE = 5;
const SYS_SCRIPT_ONRECORDSELECT = 6;
const SYS_SCRIPT_ONCOPYTEMPLATE = 7;
const SYS_SCRIPT_ONMODECHANGED = 8;
const SYS_SCRIPT_ONROLLFORWARD = 9;
const SYS_SCRIPT_ONCELLLINK = 10;
const SYS_SCRIPT_TASKFUNCTIONS = 11;
const SYS_SCRIPT_ONNEWKLENTRY = 12;
const SYS_SCRIPT_ONGOTOKLENTRY = 13;
const SYS_SCRIPT_ONDELETEKLENTRY = 14;
const SYS_SCRIPT_ONPRINT = 15;
const SYS_SCRIPT_ONPROGRAMEVENT = 16;
const SYS_SCRIPT_ONXMLSTORAGE = 17;
const SYS_SCRIPT_ONXBRLEXPORT = 18;
const SYS_SCRIPT_ONCLEANUP = 19;

// SYSTEMSCRIPTINDEXRANGE
const SYS_SCRIPT_INDEX_MIN = 0;
const SYS_SCRIPT_INDEX_MAX = 10;

// FILEBACKUPTYPES
const DOCFILE_BACKUP_KEEP = 0;
const DOCFILE_BACKUP_REMOVE = 1;
const DOCFILE_BACKUP_CLIENTDEFAULT = 2;

// FILEAUTOSAVETYPES
const DOCFILE_AUTOSAVE_PROMPT = 0;
const DOCFILE_AUTOSAVE_AUTOMATIC = 1;
const DOCFILE_AUTOSAVE_NEVER = 2;

// FILEHYPHENATIONTYPES
const DOCFILE_HYPHENATION_NONE = 0;
const DOCFILE_HYPHENATION_ALL = 1;
const DOCFILE_HYPHENATION_MODIFIABLE = 2;

// LINESYLEEXTENTTYPES
const LINE_EXTENT_INDENTATION = 0;
const LINE_EXTENT_FIXED = 1;
const LINE_EXTENT_MARGIN = 2;

// PAGENUMTOUSETYPES
const PAGENUM_USE_CURRENT_PAGE = 0;
const PAGENUM_USE_NEXT_PAGE = 1;
const PAGENUM_USE_PREVIOUS_PAGE = 2;

// PAGENUMFORMATTYPES
const PAGENUM_FORMAT_ARABIC_NUM = 0;
const PAGENUM_FORMAT_LARGE_ROMAN = 1;
const PAGENUM_FORMAT_SMALL_ROMAN = 2;
const PAGENUM_FORMAT_LARGE_LETTER = 3;
const PAGENUM_FORMAT_SMALL_LETTER = 4;

// PCHOOSERNODETYPES
const PCHOOSER_NODE_CHECKBOX = 0;
const PCHOOSER_NODE_FOLDER = 1;
const PCHOOSER_NODE_RADIOBUTTON = 2;

// BGDOCUMENTFLAGS
const BGDOCFLAGS_NONE = 0;
const BGDOCFLAGS_READONLYCVDB = 1;
const BGDOCFLAGS_READONLY = 2;
const BGDOCFLAGS_NOREFCOUNT = 4;

// DOCUMENTOPENFLAGS
const DOCOPEN_FLAGS_NONE = 0;
const DOCOPEN_FLAGS_READONLY = 1;
const DOCOPEN_FLAGS_NOOPENINGSCRIPT = 2;
const DOCOPEN_FLAGS_NOSYSTEMSCRIPTS = 4;

// TABLEMODFLAGS
const TABLEMODFLAGS_COLSPACESEPARATE = 0x8000;

// HFSETTYPE
const HFSETTYPE_NONE = -1;
const HFSETTYPE_LANDSCAPE = 0;
const HFSETTYPE_PORTRAIT = 1;
const HFSETTYPE_ODD = 2;
const HFSETTYPE_EVEN = 3;
const HFSETTYPE_FIRST_PAGE = 4;
const HFSETTYPE_SUBSEQUENT = 5;
const HFSETTYPE_LAST = 6;

// HFATTACHTYPE
const HFATTACHTYPE_NOHF = 0;
const HFATTACHTYPE_ABSOLUTE = 1;
const HFATTACHTYPE_CONDITIONAL = 2;

// CELLBORDERTYPE
const DRAWBORDERTYPE_SINGLE = 1;
const DRAWBORDERTYPE_DOTTED = 2;
const DRAWBORDERTYPE_DASHEDS = 3;
const DRAWBORDERTYPE_DASHEDL = 4;
const DRAWBORDERTYPE_DOUBLES = 5;
const DRAWBORDERTYPE_DOUBLEM = 6;
const DRAWBORDERTYPE_DOUBLEL = 7;
const DRAWBORDERTYPE_DASHEDM = 8;

// INSTABLECOLFLAG
const INSTABLECOLFLAG_COPYCONTENTS = 1;
const INSTABLECOLFLAG_BEFORE = 8;
const INSTABLECOLFLAG_MODIFIABLE = 16;

// TABLECOLUMNTYPES
const COLUMN_GENERAL = 0;
const COLUMN_NUMERIC_CELL = 1;
const COLUMN_ALPHANUM_CELL_COL_WIDTH = 2;
const COLUMN_ALPHANUM_CELL_VAR_WIDTH = 3;

// KLISAVERETURNCODE
const KLISYNC_SAVE_SUCCEED = 1;
const KLISYNC_SAVE_FAILED = 0;
const KLISYNC_ERROR_UNKNOWN = -1;
const KLISYNC_NOT_KLIFILE = -2;
const KLISYNC_KLI_NOTFOUND = -3;
const KLISYNC_INVALID_USER = -4;
const KLISYNC_LOGIN_CANCELED = -5;

// CVDOCUMENTOPENTYPES
const CVDOC_NOT_OPEN = 0;
const CVDOC_OPEN_WINDOW = 1;
const CVDOC_OPEN_SCRIPT = 2;
const CVDOC_OPEN_KNOWLEDGELIB = 3;

// OPENDOC_ACCESS
const OPENDOC_READWRITE = 0;
const OPENDOC_READONLY = 1;
const OPENDOC_READWRITEONLY = 2;

// BULLETTYPES
const BULLET_CHARACTERED = 0;
const BULLET_NUMBERED = 1;

// NUMBERTYPES
const NUMBER_ARABIC = 0;
const NUMBER_ROMAN_LARGE = 1;
const NUMBER_ROMAN_SMALL = 2;
const NUMBER_LETTER_LARGE = 3;
const NUMBER_LETTER_SMALL = 4;
const NUMBER_SIMPLIFIED_CHINESE_1 = 5;
const NUMBER_SIMPLIFIED_CHINESE_2 = 6;
const NUMBER_SIMPLIFIED_CHINESE_3 = 7;
const NUMBER_SIMPLIFIED_CHINESE_4 = 8;
const NUMBER_TRADITIONAL_CHINESE_1 = 9;
const NUMBER_TRADITIONAL_CHINESE_2 = 10;
const NUMBER_TRADITIONAL_CHINESE_3 = 11;
const NUMBER_TRADITIONAL_CHINESE_4 = 12;

// TOCFORMATCOUNTERFORMATS
const COUNTER_FORMAT_CUSTOM = 0;
const COUNTER_FORMAT_NONE = 1;
const COUNTER_FORMAT_DOT_SUFFIX = 2;
const COUNTER_FORMAT_BRACKET_SUFFIX = 3;
const COUNTER_FORMAT_BRACKETS = 4;
const COUNTER_FORMAT_HYPHENS = 5;
const COUNTER_FORMAT_SQUARE_BRACKETS = 6;

// TABJUSTIFICATION
const TAB_JUST_LEFT = 0;
const TAB_JUST_CENTER = 1;
const TAB_JUST_CENTRE = 1;
const TAB_JUST_RIGHT = 2;

// TABLEADERTYPES
const TAB_LEADER_NONE = 0;
const TAB_LEADER_LOWDOT = 1;
const TAB_LEADER_HIGHDOT = 2;
const TAB_LEADER_UNDERLINE = 3;

// TOCPAGETITLELOCATION
const TOC_PAGETITLE_MARGIN = 0;
const TOC_PAGETITLE_LEFTAT = 1;
const TOC_PAGETITLE_CENTREAT = 2;
const TOC_PAGETITLE_RIGHTAT = 3;

// TOCPAGENUMLOCATION
const TOC_PAGENUM_SUPPRESS = 0;
const TOC_PAGENUM_MARGIN = 1;
const TOC_PAGENUM_ATTEXT = 2;
const TOC_PAGENUM_LEFTAT = 3;
const TOC_PAGENUM_CENTREAT = 4;
const TOC_PAGENUM_RIGHTAT = 5;

// PAGEBREAKTYPES
const PAGEBREAK_NEXTPAGE = 1;
const PAGEBREAK_NEXTEVENPAGE = 2;
const PAGEBREAK_NEXTODDPAGE = 3;
const PAGEBREAK_THISORNEXTEVENPAGE = 4;
const PAGEBREAK_THISORNEXTODDPAGE = 5;

// CURRENCYSOURCE
const CURRENCYSOURCE_REGIONAL = 0;
const CURRENCYSOURCE_CELLOPTIONS = 1;
const CURRENCYSOURCE_OVERRIDE = 2;
const CURRENCYSOURCE_PERCENTAGE = 3;

// LINKSETSORTTYPES
const LINKSET_SECTION_GROUP = 0;
const LINKSET_SECTION = 1;
const LINKSET_TABLE_SORT_GROUP = 2;

// KLICUSTOMPROPERTYTYPES
const KLI_CUSTOM_PROPERTY_FIRSTTYPE = 0;
const KLI_CUSTOM_PROPERTY_CHARACTER = 0;
const KLI_CUSTOM_PROPERTY_BOOLEAN = 1;
const KLI_CUSTOM_PROPERTY_INTEGER = 2;
const KLI_CUSTOM_PROPERTY_SINGLE = 3;
const KLI_CUSTOM_PROPERTY_DOUBLE = 4;
const KLI_CUSTOM_PROPERTY_CURRENCY = 5;
const KLI_CUSTOM_PROPERTY_DATE = 6;
const KLI_CUSTOM_PROPERTY_LISTTEXT = 7;
const KLI_CUSTOM_PROPERTY_LASTTYPE = 7;

// KLIRECORDSETMEMFLDINDICE
const KLI_RECORDSET_MEM_FLD_CHECK = 0;
const KLI_RECORDSET_MEM_FLD_INCLUDE = 1;
const KLI_RECORDSET_MEM_FLD_MERGE = 2;

// CIRCLINGSHAPES
const CIRCLING_SHAPE_DEFAULT = 0;
const CIRCLING_SHAPE_CIRCLE = 1;
const CIRCLING_SHAPE_RECTANGLE = 2;
const CIRCLING_SHAPE_H_BRACKETS = 3;
const CIRCLING_SHAPE_V_BRACKETS = 4;

// CIRCLINGLINESTYLES
const CIRCLING_LINE_SOLID = 0;
const CIRCLING_LINE_DASH = 1;
const CIRCLING_LINE_DOT = 2;
const CIRCLING_LINE_DASHDOT = 3;
const CIRCLING_LINE_DASHDOTDOT = 4;

// IMAGEFORMATS
const IMAGE_FORMAT_BMP = 0;
const IMAGE_FORMAT_JPG = 1;
const IMAGE_FORMAT_JFF = 2;
const IMAGE_FORMAT_JTF = 3;
const IMAGE_FORMAT_PNG = 4;
const IMAGE_FORMAT_TIF = 5;
const IMAGE_FORMAT_CMP = 6;
const IMAGE_FORMAT_MSP = 7;

// IGNORESIGN
const IGNORESIGN_DEFAULT = 0;
const IGNORESIGN_YES = 1;
const IGNORESIGN_NO = 2;

// GROUPSIGN
const GROUPSIGN_DEFAULT = 0;
const GROUPSIGN_YES = 1;
const GROUPSIGN_NO = 2;

// SECTIONSORTRTNCODE
const SECTIONSORT_OK = 0;
const SECTIONSORT_NONE = 1;
const SECTIONSORT_OVERLAP = 2;
const SECTIONSORT_PARTIAL = 3;
const SECTIONSORT_SYNTAX = 4;
const SECTIONSORT_TYPEMISMATCH = 5;
const SECTIONSORT_BADTYPE = 6;
const SECTIONSORT_INVALIDGROUP = 7;
const SECTIONSORT_CANCELLED = 8;
const SECTIONSORT_INVALIDTABLE = 9;
const SECTIONSORT_INVALIDTABLECOLUMN = 10;

// TIMECASEVEIWDOCUMENTTYPES
const TIME_CVDOC_UNKNOWN = -1;
const TIME_CVDOC_LETTER = 0;
const TIME_CVDOC_INVOICE = 1;
const TIME_CVDOC_MISCELLANEOUSINVOICE = 2;
const TIME_CVDOC_CREDITNOTE = 3;
const TIME_CVDOC_STATEMENT = 4;
const TIME_CVDOC_GROUPSTATEMENT = 5;
const TIME_CVDOC_TAXINVOICE = 6;

// PERIODTYPE
const PERIOD_YEARLY = 0;
const PERIOD_QUARTER_FIRST = 1;
const PERIOD_QUARTER_SECOND = 2;
const PERIOD_QUARTER_THIRD = 3;
const PERIOD_QUARTER_FOURTH = 4;
const PERIOD_SEMI_FIRST = 5;
const PERIOD_SEMI_SECOND = 6;
const PERIOD_THIRD_FIRST = 7;
const PERIOD_THIRD_SECOND = 8;
const PERIOD_THIRD_THIRD = 9;
const PERIOD_MONTHLY_FIRST = 10;
const PERIOD_MONTHLY_SECOND = 11;
const PERIOD_MONTHLY_THIRD = 12;
const PERIOD_MONTHLY_FOURTH = 13;
const PERIOD_MONTHLY_FIFTH = 14;
const PERIOD_MONTHLY_SIXTH = 15;
const PERIOD_MONTHLY_SEVENTH = 16;
const PERIOD_MONTHLY_EIGHTH = 17;
const PERIOD_MONTHLY_NINTH = 18;
const PERIOD_MONTHLY_TENTH = 19;
const PERIOD_MONTHLY_ELEVENTH = 20;
const PERIOD_MONTHLY_TWELFTH = 21;
const PERIOD_BIMONTHLY_FIRST_SECOND = 22;
const PERIOD_BIMONTHLY_THIRD_FOURTH = 23;
const PERIOD_BIMONTHLY_FIFTH_SIXTH = 24;
const PERIOD_BIMONTHLY_SEVENTH_EIGHTH = 25;
const PERIOD_BIMONTHLY_NINTH_TENTH = 26;
const PERIOD_BIMONTHLY_ELEVENTH_TWELFTH = 27;
const PERIOD_13_PERIOD1 = 28;
const PERIOD_13_PERIOD2 = 29;
const PERIOD_13_PERIOD3 = 30;
const PERIOD_13_PERIOD4 = 31;
const PERIOD_13_PERIOD5 = 32;
const PERIOD_13_PERIOD6 = 33;
const PERIOD_13_PERIOD7 = 34;
const PERIOD_13_PERIOD8 = 35;
const PERIOD_13_PERIOD9 = 36;
const PERIOD_13_PERIOD10 = 37;
const PERIOD_13_PERIOD11 = 38;
const PERIOD_13_PERIOD12 = 39;
const PERIOD_13_PERIOD13 = 40;
const PERIOD_RANDOM_PERIOD1 = 41;
const PERIOD_RANDOM_PERIOD2 = 42;
const PERIOD_RANDOM_PERIOD3 = 43;
const PERIOD_RANDOM_PERIOD4 = 44;
const PERIOD_RANDOM_PERIOD5 = 45;
const PERIOD_RANDOM_PERIOD6 = 46;
const PERIOD_RANDOM_PERIOD7 = 47;
const PERIOD_RANDOM_PERIOD8 = 48;
const PERIOD_RANDOM_PERIOD9 = 49;
const PERIOD_RANDOM_PERIOD10 = 50;
const PERIOD_RANDOM_PERIOD11 = 51;
const PERIOD_RANDOM_PERIOD12 = 52;
const PERIOD_RANDOM_PERIOD13 = 53;
const PERIOD_ACTIVE = 54;
const PERIOD_PRIOR_ACTIVE = 55;
const PERIOD_FULL_DATE = 56;
const PERIOD_FULL_PERIOD = 57;
const PERIOD_FOREVER = 58;

// PERIODRANGETYPE
const PERIODRANGE_FULL = 0;
const PERIODRANGE_START = 1;
const PERIODRANGE_END = 2;

// SCALEFACTOR
const SCALE_MINVAL = -3;
const SCALE_THOUSANDTHS = -3;
const SCALE_HUNDREDTHS = -2;
const SCALE_TENTHS = -1;
const SCALE_DEFAULT = 0;
const SCALE_NONE = 1;
const SCALE_TENS = 2;
const SCALE_HUNDREDS = 3;
const SCALE_THOUSANDS = 4;
const SCALE_TEN_THOUSAND = 5;
const SCALE_HUNDRED_THOUSAND = 6;
const SCALE_MILLIONS = 7;
const SCALE_TEN_MILLIONS = 8;
const SCALE_HUNDRED_MILLIONS = 9;
const SCALE_BILLIONS = 10;
const SCALE_TEN_BILLIONS = 11;
const SCALE_MAXVAL = 11;

// DECIMALSTYPE
const DECTYPE_INFINITE = 1000;
const DECTYPE_AUTO = 1001;

// UNITTYPE
const UNIT_MONETARY = 0;
const UNIT_OTHER = 1;
const UNIT_DIVISION = 2;
const UNIT_MULTIPLE = 3;

// XBRLVER
const XBRLVER_20 = 0;
const XBRLVER_21 = 1;

// XBRLDGNMODE
const XBRLDGN_NEVER = 0;
const XBRLDGN_ERRORS = 1;
const XBRLDGN_BOTH = 2;
const XBRLDGN_ALWAYS = 3;

// ANNOTATIONEDITFLAGS
const EDIT_ANN_NOTE = 0x1;
const EDIT_ANN_TICKMARK = 0x2;
const EDIT_ANN_REFERENCE = 0x4;

// FEATURESTYPE
const FEAT_OLDLIBRARIES = 0;
const FEAT_KNOWLEDGELIBS = 1;
const FEAT_AUTOCOPY = 2;
const FEAT_USERDEFINEDDATA = 3;
const FEAT_EDIEXPORT = 4;
const FEAT_XBRLEXPORT = 5;
const FEAT_PAGINATION = 6;
const FEAT_HYPHENATION = 7;
const FEAT_BROWSES = 8;
const FEAT_GLOBALFONTCHANGE = 9;
const FEAT_CARRYFORWARD = 10;
const FEAT_CELLGROUPS = 11;
const FEAT_SCRIPTING = 12;
const FEAT_HISTORY = 13;
const FEAT_ISSUES = 14;
const FEAT_CALCULATIONTOOL = 15;

// DOCMODETYPE
const DOCMODE_FORM = 0;
const DOCMODE_ENABLEEDITING = 1;
const DOCMODE_DESIGN = 2;

// SHOWCELLINFO
const SHOWCELL_NONE = 0;
const SHOWCELL_NUMBER = 1;
const SHOWCELL_NUMBER_INSIDE = 2;
const SHOWCELL_SUMGROUP = 3;
const SHOWCELL_SUMGROUP_INSIDE = 4;

// NOTENUMTYPE
const NOTE_NUMBER = 0;
const NOTE_NUMBER_XREF = 1;

// NOTENUMFORMAT
const NNF_NONE = -1;
const NNF_ARABIC = 0;
const NNF_ROMAN_LARGE = 1;
const NNF_ROMAN_SMALL = 2;
const NNF_LETTERS_LARGE = 3;
const NNF_LETTERS_SMALL = 4;
const NNF_SIMPLE_CHINESE_1 = 5;
const NNF_SIMPLE_CHINESE_2 = 6;
const NNF_SIMPLE_CHINESE_3 = 7;
const NNF_SIMPLE_CHINESE_4 = 8;
const NNF_TRADITION_CHINESE_1 = 9;
const NNF_TRADITION_CHINESE_2 = 10;
const NNF_TRADITION_CHINESE_3 = 11;
const NNF_TRADITION_CHINESE_4 = 12;
const NNF_GREEK_LETTERS_LARGE = 13;
const NNF_GREEK_LETTERS_SMALL = 14;

// LEVELFORMAT
const LVF_NONE = -1;
const LVF_ARABIC = 0;
const LVF_ROMAN_LARGE = 1;
const LVF_ROMAN_SMALL = 2;
const LVF_LETTERS_LARGE = 3;
const LVF_LETTERS_SMALL = 4;
const LVF_SIMPLE_CHINESE_1 = 5;
const LVF_SIMPLE_CHINESE_2 = 6;
const LVF_SIMPLE_CHINESE_3 = 7;
const LVF_SIMPLE_CHINESE_4 = 8;
const LVF_TRADITION_CHINESE_1 = 9;
const LVF_TRADITION_CHINESE_2 = 10;
const LVF_TRADITION_CHINESE_3 = 11;
const LVF_TRADITION_CHINESE_4 = 12;
const LVF_GREEK_LETTERS_LARGE = 13;
const LVF_GREEK_LETTERS_SMALL = 14;

// NOTENUMSUBTYPE
const NNT_NONE = -1;
const NNT_DEPTH_ONE_SHOW_ALL = 0;
const NNT_DEPTH_TWO_SHOW_ALL = 1;
const NNT_DEPTH_THREE_SHOW_ALL = 2;
const NNT_DEPTH_TWO_SHOW_ALLFLUSH = 3;
const NNT_DEPTH_TWO_SHOW_ALLBRACKET = 4;
const NNT_DEPTH_TWO_SHOW_TWO = 5;
const NNT_DEPTH_THREE_SHOW_THREE = 6;
const NNT_DEPTH_ONE_SHOW_ALLBRACKET = 7;
const NNT_DEPTH_TWO_SHOW_TWOBRACKET = 8;
const NNT_DEPTH_THREE_SHOW_THREEBRACKET = 9;

// SECTLINKTYPE
const SECT_LINK_NONE = 0;
const SECT_LINK_KL = 1;
const SECT_LINK_KLI = 2;

// EXPORTTYPE
const EXPTYPE_XBRL = 0;
const EXPTYPE_INLINEXBRL = 1;

// XBRLMULTTAGACTION
const XBRLMTA_NONE = 0;
const XBRLMTA_ADD = 1;
const XBRLMTA_USEIFEQUAL = 4;

// PAGESETUPNUMSCHEME
const PGSETUP_DEFAULT = 0;
const PGSETUP_SETPAGEGNUMTO = 1;
const PGSETUP_INCPAGENUMBY = 2;

// INPUT_VALIDATION
const INPUT_VALIDATE_NONE = 0;
const INPUT_VALIDATE_LESS = 1;
const INPUT_VALIDATE_LESSEQ = 2;
const INPUT_VALIDATE_GT = 3;
const INPUT_VALIDATE_GTEQ = 4;
const INPUT_VALIDATE_NOTEQ = 5;
const INPUT_VALIDATE_RANGE = 6;
const INPUT_VALIDATE_NOTEMPTY = 7;
const INPUT_VALIDATE_MATCHFMT = 8;

// INPUT_RESPONSE
const INPUT_RESPONSE_NONE = 0;
const INPUT_RESPONSE_TOOLTIP = 1;
const INPUT_RESPONSE_INFODLG = 2;
const INPUT_RESPONSE_OKCANDLG = 3;
const INPUT_RESPONSE_YESNODLG = 4;

// INPUT_ACTION
const INPUT_ACTION_KEEP_VALUE = 0;
const INPUT_ACTION_REJECT_VALUE = 1;
const INPUT_ACTION_REJ_IFOKORYES = 2;
const INPUT_ACTION_REJ_IFCANCELORNO = 3;

// INPUT_FORMAT_TYPE
const INPUT_FORMAT_NONE = 0;
const INPUT_FORMAT_POSTALCODE = 1;
const INPUT_FORMAT_ZIPCODE_USA = 2;
const INPUT_FORMAT_ZIPCODE4_USA = 3;
const INPUT_FORMAT_ZIPCODE_NUM = 4;
const INPUT_FORMAT_ZIPCODE_HYPHEN = 5;
const INPUT_FORMAT_ZIPCODE_GENERAL = 6;
const INPUT_FORMAT_PHONENO_CAN = 7;
const INPUT_FORMAT_PHONENO_USA = 8;
const INPUT_FORMAT_PHONENO_GENERAL = 9;
const INPUT_FORMAT_PHONENO_INTL = 10;
const INPUT_FORMAT_SIN_CAN = 11;
const INPUT_FORMAT_SIN_USA = 12;
const INPUT_FORMAT_VALUE_X = 13;
const INPUT_FORMAT_VALUE_YN = 14;
const INPUT_FORMAT_SPECIFIC_LIST = 15;
const INPUT_FORMAT_CUSTOM = 16;

// PRINTDOC_FLAGS
const PRINTDOC_NONE = 0;
const PRINTDOC_MASTERDOC = 1;

// PDFPRINT_CODE
const PDFPRINT_CODE_FNAME = 0;
const PDFPRINT_CODE_DEFFNAME = 1;
const PDFPRINT_CODE_DLGFNAME = 2;

// PDF_SAVEFLAGS
const PDF_SAVEFLAG_FULLEMBEDFONTS = 1;
const PDF_SAVEFLAG_PDFA = 2;
const PDF_SAVEFLAG_OPENPDFFILE = 4;
const PDF_SAVEFLAG_MASTERDOC = 8;

// NET_INCOME_GROUPS
const NET_INCOME_MAP = 0;
const NET_INCOME_GROUP1 = 1;
const NET_INCOME_GROUP2 = 2;
const NET_INCOME_GROUP3 = 3;
const NET_INCOME_GROUP4 = 4;
const NET_INCOME_GROUP5 = 5;
const NET_INCOME_GROUP6 = 6;
const NET_INCOME_GROUP7 = 7;
const NET_INCOME_GROUP8 = 8;
const NET_INCOME_GROUP9 = 9;
const NET_INCOME_GROUP10 = 10;

// BLOCK_RENUMBER_FLAGS
const BLOCK_RENUMBER_NONE = 0;
const BLOCK_RENUMBER_UPDATE_HIDE_SKIP = 1;

// MISSING_REFERENCE_DRAW_OP
const NORMALLY = 0;
const HIDDEN = 1;
const CUSTOM_COLOR = 2;

// FREEZE_EDITING_OPTIONS
const NO_INPUT_PERMITTED = 0;
const ENABLE_INPUT_DISPLAY_SELECTION = 1;
const ENABLE_INPUT_HIDE_SELECTION = 2;

// RIBBONBAR_FIXED_STATE
const FIXED_STATE_NONE = -1;
const FIXED_STATE_COLLAPSED = 0;
const FIXED_STATE_MINIMIZED = 1;
const FIXED_STATE_MAXIMIZED = 2;

// XBRL_DIAGNOSTIC_INDEX
const XBRL_DIAGNOSTIC_INDEX_MIN = 0;
const XBRL_DIAGNOSTIC_INVALID = 0;
const XBRL_DIAGNOSTIC_CONTEXT_GENERAL = 1;
const XBRL_DIAGNOSTIC_CONTEXT_CURRENCY = 2;
const XBRL_DIAGNOSTIC_CONTEXT_ENTITY_INVALIDIDENTITY = 3;
const XBRL_DIAGNOSTIC_CONTEXT_ENTITY_BADSEGMENTNS = 4;
const XBRL_DIAGNOSTIC_CONTEXT_ENTITY_BADSEGMENTNS_SEV = 5;
const XBRL_DIAGNOSTIC_CONTEXT_ENTITY_BADSEGELEM = 6;
const XBRL_DIAGNOSTIC_CONTEXT_ENTITY_BADSEGATTR = 7;
const XBRL_DIAGNOSTIC_ENTITY_BADSEGMENT = 8;
const XBRL_DIAGNOSTIC_ENTITY_BAGSEGMENT = 8;
const XBRL_DIAGNOSTIC_CONTEXT_SCENARIO_BADSCENARIONS = 9;
const XBRL_DIAGNOSTIC_CONTEXT_SCENARIO_BADSCENARIONS_SEV = 10;
const XBRL_DIAGNOSTIC_CONTEXT_SCENARIO_BADSCENELEM = 11;
const XBRL_DIAGNOSTIC_CONTEXT_SCENARIO_BADSCENATTR = 12;
const XBRL_DIAGNOSTIC_CONTEXT_BADSCENARIO = 13;
const XBRL_DIAGNOSTIC_CONTEXT_NOTFOUND = 14;
const XBRL_DIAGNOSTIC_UNIT_NOTFOUND = 15;
const XBRL_DIAGNOSTIC_UNIT_MEASUREID = 16;
const XBRL_DIAGNOSTIC_UNIT_MEASURENS = 17;
const XBRL_DIAGNOSTIC_UNIT_EMPTYMEASURE = 18;
const XBRL_DIAGNOSTIC_UNIT_BADCURRENCY = 19;
const XBRL_DIAGNOSTIC_UNIT_DUP_DIVIDEMEASURE = 20;
const XBRL_DIAGNOSTIC_PERIOD_APPL = 21;
const XBRL_DIAGNOSTIC_PERIOD_BAD = 22;
const XBRL_DIAGNOSTIC_PERIOD_MISMATCH_INSTANT = 23;
const XBRL_DIAGNOSTIC_PERIOD_MISMATCH_DURATION = 24;
const XBRL_DIAGNOSTIC_DUP_CONTEXT_MERGED = 25;
const XBRL_DIAGNOSTIC_DUP_CONTEXT_DUP = 26;
const XBRL_DIAGNOSTIC_DUP_UNIT_MERGED = 27;
const XBRL_DIAGNOSTIC_DUP_UNIT_DUP = 28;
const XBRL_DIAGNOSTIC_AUTOTAG_ERROR = 29;
const XBRL_DIAGNOSTIC_INVALID_CONTEXT_MONETARY_21 = 30;
const XBRL_DIAGNOSTIC_INVALID_CONTEXT_MONETARY_20 = 31;
const XBRL_DIAGNOSTIC_INVALID_CONTEXT_NUMERIC_21 = 32;
const XBRL_DIAGNOSTIC_INVALID_CONTEXT_NUMERIC_NUM_NONNUM = 33;
const XBRL_DIAGNOSTIC_INVALID_CONTEXT_NUMERIC_NONNUM_MONETARY = 34;
const XBRL_DIAGNOSTIC_NUMERIC_UNNECESSARY = 35;
const XBRL_DIAGNOSTIC_CONTEXT_MONETARY_GLOBAL = 36;
const XBRL_DIAGNOSTIC_CONTEXT_NUMERIC_GLOBAL_NUM_NONNUM = 37;
const XBRL_DIAGNOSTIC_CONTEXT_NUMERIC_GLOBAL_NONNUM_MONETARY = 38;
const XBRL_DIAGNOSTIC_DUP_ITEM = 39;
const XBRL_DIAGNOSTIC_DUP_DIFFVAL = 40;
const XBRL_DIAGNOSTIC_DUP_UNEQUAL = 41;
const XBRL_DIAGNOSTIC_DUP_OVERFLOW = 42;
const XBRL_DIAGNOSTIC_ABSTRACT_TAGGED = 43;
const XBRL_DIAGNOSTIC_TUPLE_TAGGED = 44;
const XBRL_DIAGNOSTIC_CALC_TREE = 45;
const XBRL_DIAGNOSTIC_INVALID_BASE64 = 46;
const XBRL_DIAGNOSTIC_TUPLE_BELOWMIN_TAGGED = 47;
const XBRL_DIAGNOSTIC_TUPLE_BELOWMIN_UNTAGGED_NOTUPLE = 48;
const XBRL_DIAGNOSTIC_TUPLE_BELOWMIN_UNTAGGED_NOTAG = 49;
const XBRL_DIAGNOSTIC_TUPLE_BELOWMIN_UNTAGGED_NOCONT = 50;
const XBRL_DIAGNOSTIC_TUPLE_BELOWMIN_EXISTING_TOOFEW = 51;
const XBRL_DIAGNOSTIC_TUPLE_BELOWMIN_EXISTING_TOOFEWTUPLE = 52;
const XBRL_DIAGNOSTIC_TUPLE_BELOWMIN_EXISTING_TOOFEWCONT = 53;
const XBRL_DIAGNOSTIC_FIXEDVAL_MISMATCH = 54;
const XBRL_DIAGNOSTIC_CONSTRAINT_DATATYPE = 55;
const XBRL_DIAGNOSTIC_CONSTRAINT_LENGTH = 56;
const XBRL_DIAGNOSTIC_CONSTRAINT_MINLENGTH = 57;
const XBRL_DIAGNOSTIC_CONSTRAINT_MAXLENGTH = 58;
const XBRL_DIAGNOSTIC_CONSTRAINT_PATTERN = 59;
const XBRL_DIAGNOSTIC_CONSTRAINT_ENUM = 60;
const XBRL_DIAGNOSTIC_CONSTRAINT_MAXINCLUSIVE = 61;
const XBRL_DIAGNOSTIC_CONSTRAINT_MAXEXCLUSIVE = 62;
const XBRL_DIAGNOSTIC_CONSTRAINT_MINEXCLUSIVE = 63;
const XBRL_DIAGNOSTIC_CONSTRAINT_MININCLUSIVE = 64;
const XBRL_DIAGNOSTIC_CONSTRAINT_TOTALDIGITS = 65;
const XBRL_DIAGNOSTIC_CONSTRAINT_FRACTIONDIGITS = 66;
const XBRL_DIAGNOSTIC_NO_NUMERATOR_TAXELEM = 67;
const XBRL_DIAGNOSTIC_NO_DENOMINATOR_TAXELEM = 68;
const XBRL_DIAGNOSTIC_INVALID_MEASURE_MEASURE = 69;
const XBRL_DIAGNOSTIC_INVALID_MEASURE_SHARES = 70;
const XBRL_DIAGNOSTIC_ASSERTION_CONSIST = 71;
const XBRL_DIAGNOSTIC_ASSERTION_EXISTENCE = 72;
const XBRL_DIAGNOSTIC_ASSERTION_VALUE = 73;
const XBRL_DIAGNOSTIC_ASSERTION_UNKNOWN = 74;
const XBRL_DIAGNOSTIC_FORMULAERROR_PROC = 75;
const XBRL_DIAGNOSTIC_FORMULAERROR_DOCLOAD = 76;
const XBRL_DIAGNOSTIC_FORMULAERROR_DOCCREATE = 77;
const XBRL_DIAGNOSTIC_FORMULAERROR_INIT = 78;
const XBRL_DIAGNOSTIC_FORMULAERROR_SYSTEM = 79;
const XBRL_DIAGNOSTIC_TUPLE_INVALIDREF = 80;
const XBRL_DIAGNOSTIC_TUPLE_CONFIG = 81;
const XBRL_DIAGNOSTIC_TUPLE_DOESNOTBELONG = 82;
const XBRL_DIAGNOSTIC_TUPLE_ABOVEMAX = 83;
const XBRL_DIAGNOSTIC_DIM_DEFAULT_USED = 84;
const XBRL_DIAGNOSTIC_DIM_PRI_ITEM_INVALID = 85;
const XBRL_DIAGNOSTIC_DIM_REPEATED_DIM = 86;
const XBRL_DIAGNOSTIC_DIM_TYPED_MEM_NOT_TYPED_DIM = 87;
const XBRL_DIAGNOSTIC_DIM_EXP_MEM_NOT_EXP_DIM = 88;
const XBRL_DIAGNOSTIC_DIM_UNDEFINED_QNAME = 89;
const XBRL_DIAGNOSTIC_SUBDOC_LOADFAIL = 90;
const XBRL_DIAGNOSTIC_SUBDOC_CIRCULARREF_SELF = 91;
const XBRL_DIAGNOSTIC_SUBDOC_CIRCULARREF_CIRCULAR = 92;
const XBRL_DIAGNOSTIC_NS_DUPPREFIX = 93;
const XBRL_DIAGNOSTIC_LANG_UNKNOWN = 94;
const XBRL_DIAGNOSTIC_CVVER_USED = 95;
const XBRL_DIAGNOSTIC_ROOTNODE_LANG_UNKNOWN = 96;
const XBRL_DIAGNOSTIC_INDEX_MAX = 96;

// IXTransVersionCode
const IXTV_Ver1 = 1;
const IXTV_Ver2 = 2;
const IXTV_Ver3 = 3;

// XBRL_DGN_LEVEL
const DGNLVL_INFO = 0;
const DGNLVL_WARNING = 1;
const DGNLVL_ERROR = 2;
const DGNLVL_DEFAULT = 3;
const NUM_DGN_LEVELS = 4;

// XBRL_SCHEMA_ENTRY_FIELD
const XBRL_SEF_NS = 0;
const XBRL_SEF_SCHEMALOC = 1;
const XBRL_SEF_NSPREFIX = 2;

// CWTaxJurisdictionType
const tjtNone = 0;
const tjtCanada = ( tjtNone + 1 );
const tjtUSA = ( tjtCanada + 1 );
const tjtNetherlands = ( tjtUSA + 1 );
const tjtNorway = ( tjtNetherlands + 1 );
const tjtTaiwan = ( tjtNorway + 1 );
const tjtUK = ( tjtTaiwan + 1 );
const tjtAustralia = ( tjtUK + 1 );

// CWTaxEntityType
const tetNone = 0;
const tetCorporation = ( tetNone + 1 );
const tetSCorporation = ( tetCorporation + 1 );
const tetPartnership = ( tetSCorporation + 1 );
const tetNonProfit = ( tetPartnership + 1 );

// CWTaxVendorType
const tvtTaxPrep = 0;
const tvtGenericRSI = ( tvtTaxPrep + 1 );

// CWAutoCompressType
const actNo = 0;
const actYes = ( actNo + 1 );
const actPrompt = ( actYes + 1 );

// CWColorSchemeType
const cstDefault = 0;
const cstLedgerPad = ( cstDefault + 1 );
const cstPostItNote = ( cstLedgerPad + 1 );
const cstRainbow = ( cstPostItNote + 1 );
const cstSpectrum = ( cstRainbow + 1 );
const cstSubliminal = ( cstSpectrum + 1 );
const cstVanilla = ( cstSubliminal + 1 );
const cstWave = ( cstVanilla + 1 );
const cstSubtle = ( cstWave + 1 );
const cstTracker = ( cstSubtle + 1 );
const cstSocial = ( cstTracker + 1 );
const cstVintage = ( cstSocial + 1 );
const cstWebApp = ( cstVintage + 1 );

// CWListFieldStyleType
const lfstDescriptions = 0;
const lfstAbbreviations = ( lfstDescriptions + 1 );
const lfstEntryCodes = ( lfstAbbreviations + 1 );

// CWRolePositionType
const rptTop = 0;
const rptBottom = ( rptTop + 1 );

// CWOverrideRolePositionType
const orptDefault = 0;
const orptTop = ( orptDefault + 1 );
const orptBottom = ( orptTop + 1 );

// CWDisplayMappingsAsType
const dmatShort = 0;
const dmatExtended = ( dmatShort + 1 );
const dmatExtendedIf = ( dmatExtended + 1 );

// CWWorkingTrialBalanceWarnType
const wtbtWarning = 0;
const wtbtNoExit = ( wtbtWarning + 1 );
const wtbtNoWarning = ( wtbtNoExit + 1 );

// CWAccountType
const atBalanceSheet = 0;
const atIncomeStatement = ( atBalanceSheet + 1 );
const atCashFlow = ( atIncomeStatement + 1 );
const atPerformanceMeasures = ( atCashFlow + 1 );

// CWJournalAccountType
const jatFinancial = 0;
const jatCashFlow = ( jatFinancial + 1 );
const jatPerformance = ( jatCashFlow + 1 );
const jatGrouping1 = ( jatPerformance + 1 );
const jatGrouping2 = ( jatGrouping1 + 1 );
const jatGrouping3 = ( jatGrouping2 + 1 );
const jatGrouping4 = ( jatGrouping3 + 1 );
const jatGrouping5 = ( jatGrouping4 + 1 );
const jatGrouping6 = ( jatGrouping5 + 1 );
const jatGrouping7 = ( jatGrouping6 + 1 );
const jatGrouping8 = ( jatGrouping7 + 1 );
const jatGrouping9 = ( jatGrouping8 + 1 );
const jatGrouping10 = ( jatGrouping9 + 1 );
const jatMapping = ( jatGrouping10 + 1 );
const jatTaxCode = ( jatMapping + 1 );

// CWMappingAccountType
const matBalanceSheet = 0;
const matIncomeStatement = ( matBalanceSheet + 1 );
const matStatementOfCashFlow = ( matIncomeStatement + 1 );
const matPerformance = ( matStatementOfCashFlow + 1 );

// CWSignType
const stNA = 0;
const stCredit = ( stNA + 1 );
const stDebit = ( stCredit + 1 );

// CWClassType
const ctNone = 0;
const ctTR = ( ctNone + 1 );
const ctQA = ( ctTR + 1 );
const ctIN = ( ctQA + 1 );
const ctCA = ( ctIN + 1 );
const ctFD = ( ctCA + 1 );
const ctFN = ( ctFD + 1 );
const ctFA = ( ctFN + 1 );
const ctIA = ( ctFA + 1 );
const ctOA = ( ctIA + 1 );
const ctTP = ( ctOA + 1 );
const ctCL = ( ctTP + 1 );
const ctLL = ( ctCL + 1 );
const ctDI = ( ctLL + 1 );
const ctRE = ( ctDI + 1 );
const ctEQ = ( ctRE + 1 );
const ctSA = ( ctEQ + 1 );
const ctSO = ( ctSA + 1 );
const ctRO = ( ctSO + 1 );
const ctCD = ( ctRO + 1 );
const ctCN = ( ctCD + 1 );
const ctCI = ( ctCN + 1 );
const ctPU = ( ctCI + 1 );
const ctCR = ( ctPU + 1 );
const ctCS = ( ctCR + 1 );
const ctOD = ( ctCS + 1 );
const ctON = ( ctOD + 1 );
const ctIT = ( ctON + 1 );
const ctOI = ( ctIT + 1 );
const ctOR = ( ctOI + 1 );
const ctOE = ( ctOR + 1 );

// CWBehaviourType
const btNormal = 0;
const btTitle = ( btNormal + 1 );
const btCalculated = ( btTitle + 1 );
const btUnassignable = ( btCalculated + 1 );
const btFiltered = ( btUnassignable + 1 );

// CWAccumulatorType
const atNA = 0;
const atLevel1 = ( atNA + 1 );
const atLevel2 = ( atLevel1 + 1 );
const atLevel3 = ( atLevel2 + 1 );
const atLevel4 = ( atLevel3 + 1 );
const atLevel5 = ( atLevel4 + 1 );
const atLevel6 = ( atLevel5 + 1 );
const atClear = ( atLevel6 + 1 );

// CWAdjustingEntryType
const aetNormal = 0;
const aetReclassifying = ( aetNormal + 1 );
const aetUnrecordedProposed = ( aetReclassifying + 1 );
const aetEliminating = ( aetUnrecordedProposed + 1 );
const aetTaxFederal = ( aetEliminating + 1 );
const aetTaxState = ( aetTaxFederal + 1 );
const aetTaxCity = ( aetTaxState + 1 );
const aetPriorPeriod = ( aetTaxCity + 1 );
const aetOtherBasis = ( aetPriorPeriod + 1 );
const aetUnrecordedProjected = ( aetOtherBasis + 1 );
const aetUnrecordedJudgmental = ( aetUnrecordedProjected + 1 );
const aetOther2 = ( aetUnrecordedJudgmental + 1 );
const aetOther3 = ( aetOther2 + 1 );

// CWRecurrenceType
const rtNone = 0;
const rtRecurring = ( rtNone + 1 );
const rtReversing = ( rtRecurring + 1 );

// CWRecurrencePatternType
const rptNone = 0;
const rptEveryFourWeeks = ( rptNone + 1 );
const rptMonthly = ( rptEveryFourWeeks + 1 );
const rptBiMonthly = ( rptMonthly + 1 );
const rptQuarterly = ( rptBiMonthly + 1 );
const rptThirdly = ( rptQuarterly + 1 );
const rptSemiAnnualy = ( rptThirdly + 1 );
const rptYearly = ( rptSemiAnnualy + 1 );

// CWRecurrenceRangeType
const rrtNoEndDate = 0;
const rrtEndAfter = ( rrtNoEndDate + 1 );
const rrtEndBy = ( rrtEndAfter + 1 );

// CWVersionType
const vtAPP = 0;
const vtTLB = ( vtAPP + 1 );
const vtAPPFull = ( vtTLB + 1 );
const vtAPPDate = ( vtAPPFull + 1 );
const vtFile = ( vtAPPDate + 1 );

// CWDocumentType
const dtFolder = 0;
const dtAutomatic = ( dtFolder + 1 );
const dtCaseView = ( dtAutomatic + 1 );
const dtManual = ( dtCaseView + 1 );
const dtExternalLink = ( dtManual + 1 );
const dtLink = ( dtExternalLink + 1 );
const dtURL = ( dtLink + 1 );
const dtIdea = ( dtURL + 1 );
const dtWord = ( dtIdea + 1 );
const dtExcel = ( dtWord + 1 );

// CWFontSettingType
const fstDocumentNumber = 0;
const fstRole1 = ( fstDocumentNumber + 1 );
const fstRole2 = ( fstRole1 + 1 );
const fstRole3 = ( fstRole2 + 1 );
const fstRole4 = ( fstRole3 + 1 );
const fstNumbers = ( fstRole4 + 1 );
const fstAnnotation = ( fstNumbers + 1 );
const fstTickmarksAndAnnotation = ( fstAnnotation + 1 );
const fstReference = ( fstTickmarksAndAnnotation + 1 );
const fstTable = ( fstReference + 1 );
const fstHeading1 = ( fstTable + 1 );
const fstHeading2 = ( fstHeading1 + 1 );
const fstHeading3 = ( fstHeading2 + 1 );
const fstHeading4 = ( fstHeading3 + 1 );
const fstFooter1 = ( fstHeading4 + 1 );
const fstTitle = ( fstFooter1 + 1 );
const fstText = ( fstTitle + 1 );
const fstNumbers1 = ( fstText + 1 );
const fstNumbers2 = ( fstNumbers1 + 1 );
const fstNumbers3 = ( fstNumbers2 + 1 );
const fstCalculatedNumbers = ( fstNumbers3 + 1 );
const fstRole5 = ( fstCalculatedNumbers + 1 );
const fstRole6 = ( fstRole5 + 1 );
const fstRole7 = ( fstRole6 + 1 );
const fstRole8 = ( fstRole7 + 1 );

// CWPeriodType
const ptDefault = -1;
const ptOpening = 0;
const ptPeriod1 = 1;
const ptPeriod2 = ( ptPeriod1 + 1 );
const ptPeriod3 = ( ptPeriod2 + 1 );
const ptPeriod4 = ( ptPeriod3 + 1 );
const ptPeriod5 = ( ptPeriod4 + 1 );
const ptPeriod6 = ( ptPeriod5 + 1 );
const ptPeriod7 = ( ptPeriod6 + 1 );
const ptPeriod8 = ( ptPeriod7 + 1 );
const ptPeriod9 = ( ptPeriod8 + 1 );
const ptPeriod10 = ( ptPeriod9 + 1 );
const ptPeriod11 = ( ptPeriod10 + 1 );
const ptPeriod12 = ( ptPeriod11 + 1 );
const ptPeriod13 = ( ptPeriod12 + 1 );

// CWPeriodOnlyType
const potPeriod1 = 1;
const potPeriod2 = ( potPeriod1 + 1 );
const potPeriod3 = ( potPeriod2 + 1 );
const potPeriod4 = ( potPeriod3 + 1 );
const potPeriod5 = ( potPeriod4 + 1 );
const potPeriod6 = ( potPeriod5 + 1 );
const potPeriod7 = ( potPeriod6 + 1 );
const potPeriod8 = ( potPeriod7 + 1 );
const potPeriod9 = ( potPeriod8 + 1 );
const potPeriod10 = ( potPeriod9 + 1 );
const potPeriod11 = ( potPeriod10 + 1 );
const potPeriod12 = ( potPeriod11 + 1 );
const potPeriod13 = ( potPeriod12 + 1 );

// CWAdjustmentType
const atNormal = 0;
const atReclassifying = ( atNormal + 1 );
const atUnrecorded = ( atReclassifying + 1 );
const atEliminating = ( atUnrecorded + 1 );
const atTaxFederal = ( atEliminating + 1 );
const atTaxState = ( atTaxFederal + 1 );
const atTaxCity = ( atTaxState + 1 );
const atOtherBasis = ( atTaxCity + 1 );
const atUnrecProjected = ( atOtherBasis + 1 );
const atUnrecJudgmental = ( atUnrecProjected + 1 );
const atOther2 = ( atUnrecJudgmental + 1 );
const atOther3 = ( atOther2 + 1 );

// CWBucketType
const btDefault = 0;
const btThirteen = ( btDefault + 1 );
const btMonthly = ( btThirteen + 1 );
const btBiMonthly = ( btMonthly + 1 );
const btQuarterly = ( btBiMonthly + 1 );
const btThirdly = ( btQuarterly + 1 );
const btSemiAnnual = ( btThirdly + 1 );
const btYearly = ( btSemiAnnual + 1 );
const btRandom = ( btYearly + 1 );

// CWColumnPositionType
const cptNA = 0;
const cptColumn1 = ( cptNA + 1 );
const cptColumn2 = ( cptColumn1 + 1 );
const cptColumn3 = ( cptColumn2 + 1 );

// CWUnderlineType
const utNone = 0;
const utSingle = ( utNone + 1 );
const utDouble = ( utSingle + 1 );

// CWPrintFeaturesType
const pftNA = 0;
const pftCredit = ( pftNA + 1 );
const pftDebit = ( pftCredit + 1 );
const pftHeader = ( pftDebit + 1 );
const pftJustify = ( pftHeader + 1 );
const pftSkip = ( pftJustify + 1 );

// CWCalculateBalanceType
const cbtNA = 0;
const cbtActive = ( cbtNA + 1 );
const cbtActiveNegative = ( cbtActive + 1 );
const cbtDifference = ( cbtActiveNegative + 1 );
const cbtDifferenceNegative = ( cbtDifference + 1 );
const cbtPrior = ( cbtDifferenceNegative + 1 );
const cbtPriorNegative = ( cbtPrior + 1 );

// CWCurrentPeriodTypeType
const cpttThirteen = 0;
const cpttMonthly = ( cpttThirteen + 1 );
const cpttBiMonthly = ( cpttMonthly + 1 );
const cpttQuarterly = ( cpttBiMonthly + 1 );
const cpttThirdly = ( cpttQuarterly + 1 );
const cpttSemiAnnualy = ( cpttThirdly + 1 );
const cpttYearly = ( cpttSemiAnnualy + 1 );
const cpttRandom = ( cpttYearly + 1 );

// CWCurrentPeriodCalculatedType
const cpctIndependent = 0;
const cpctThirteen = ( cpctIndependent + 1 );
const cpctMonthly = ( cpctThirteen + 1 );
const cpctBiMonthly = ( cpctMonthly + 1 );
const cpctQuarterly = ( cpctBiMonthly + 1 );
const cpctThirdly = ( cpctQuarterly + 1 );
const cpctSemiAnnualy = ( cpctThirdly + 1 );
const cpctRandom = ( cpctSemiAnnualy + 1 );

// CWCurrentPeriodType
const cptPeriod1 = 1;
const cptPeriod2 = ( cptPeriod1 + 1 );
const cptPeriod3 = ( cptPeriod2 + 1 );
const cptPeriod4 = ( cptPeriod3 + 1 );
const cptPeriod5 = ( cptPeriod4 + 1 );
const cptPeriod6 = ( cptPeriod5 + 1 );
const cptPeriod7 = ( cptPeriod6 + 1 );
const cptPeriod8 = ( cptPeriod7 + 1 );
const cptPeriod9 = ( cptPeriod8 + 1 );
const cptPeriod10 = ( cptPeriod9 + 1 );
const cptPeriod11 = ( cptPeriod10 + 1 );
const cptPeriod12 = ( cptPeriod11 + 1 );
const cptPeriod13 = ( cptPeriod12 + 1 );

// CWRoleType
const rtRole1 = 1;
const rtRole2 = ( rtRole1 + 1 );
const rtRole3 = ( rtRole2 + 1 );
const rtRole4 = ( rtRole3 + 1 );
const rtRole5 = ( rtRole4 + 1 );
const rtRole6 = ( rtRole5 + 1 );
const rtRole7 = ( rtRole6 + 1 );
const rtRole8 = ( rtRole7 + 1 );

// CWAutoDocTypeFormatType
const adttNone = 0;
const adttAccountAnalysisAccountDate = ( adttNone + 1 );
const adttAccountAnalysisAccountDateSubtotal = ( adttAccountAnalysisAccountDate + 1 );
const adttAccountAnalysisMapNumberDate = ( adttAccountAnalysisAccountDateSubtotal + 1 );
const adttAccountAnalysisMapNumberDateSubtotal = ( adttAccountAnalysisMapNumberDate + 1 );
const adttAccountReconciliationClearItems = ( adttAccountAnalysisMapNumberDateSubtotal + 1 );
const adttAccountReconciliationOutstandingDebitCredit = ( adttAccountReconciliationClearItems + 1 );
const adttAccountReconciliationOutstandingDebit = ( adttAccountReconciliationOutstandingDebitCredit + 1 );
const adttAccountReconciliationOutstandingCredit = ( adttAccountReconciliationOutstandingDebit + 1 );
const adttAccountReconciliationAutomatic = ( adttAccountReconciliationOutstandingCredit + 1 );
const adttAccountReconciliationManual = ( adttAccountReconciliationAutomatic + 1 );
const adttAnalyticalReviewRatioAnalysis = ( adttAccountReconciliationManual + 1 );
const adttAnalyticalReviewVarianceAccount = ( adttAnalyticalReviewRatioAnalysis + 1 );
const adttAnalyticalReviewVarianceAccountGroupSubtotals = ( adttAnalyticalReviewVarianceAccount + 1 );
const adttAnalyticalReviewVarianceGroupGroupSubtotals = ( adttAnalyticalReviewVarianceAccountGroupSubtotals + 1 );
const adttAnalyticalReviewVarianceGroupSummary = ( adttAnalyticalReviewVarianceGroupGroupSubtotals + 1 );
const adttChartOfAccountsAlphabetical = ( adttAnalyticalReviewVarianceGroupSummary + 1 );
const adttChartOfAccountsNumerical = ( adttChartOfAccountsAlphabetical + 1 );
const adttChartOfMappingNumbersAlphabetical = ( adttChartOfAccountsNumerical + 1 );
const adttChartOfMappingNumbersNumerical = ( adttChartOfMappingNumbersAlphabetical + 1 );
const adttChartOfMappingNumbersReport = ( adttChartOfMappingNumbersNumerical + 1 );
const adttClientProfile = ( adttChartOfMappingNumbersReport + 1 );
const adttDiagnosticsMappingStructure = ( adttClientProfile + 1 );
const adttDiagnosticsSetup = ( adttDiagnosticsMappingStructure + 1 );
const adttDiagnosticsOutOfBalance = ( adttDiagnosticsSetup + 1 );
const adttDiagnosticsAccountStructure = ( adttDiagnosticsOutOfBalance + 1 );
const adttDiagnosticsRoleCompletion = ( adttDiagnosticsAccountStructure + 1 );
const adttDiagnosticsTaxStructure = ( adttDiagnosticsRoleCompletion + 1 );
const adttDocumentIndex = ( adttDiagnosticsTaxStructure + 1 );
const adttDocumentManagerRoleCompletion = ( adttDocumentIndex + 1 );
const adttDocumentManagerRoleCompletionProperties = ( adttDocumentManagerRoleCompletion + 1 );
const adttBalanceSheetActiveYTD = ( adttDocumentManagerRoleCompletionProperties + 1 );
const adttBalanceSheetActiveYTDAC = ( adttBalanceSheetActiveYTD + 1 );
const adttBalanceSheetActiveBudget = ( adttBalanceSheetActiveYTDAC + 1 );
const adttBalanceSheetActivePrior = ( adttBalanceSheetActiveBudget + 1 );
const adttBalanceSheetActivePriorYTD = ( adttBalanceSheetActivePrior + 1 );
const adttBalanceSheetActiveBudgetPriorYTD = ( adttBalanceSheetActivePriorYTD + 1 );
const adttBalanceSheetActiveBudgetYTD = ( adttBalanceSheetActiveBudgetPriorYTD + 1 );
const adttBalanceSheetDraftActivePriorYTD = ( adttBalanceSheetActiveBudgetYTD + 1 );
const adttBalanceSheetFiveYearHistory = ( adttBalanceSheetDraftActivePriorYTD + 1 );
const adttBalanceSheetActiveYTDPriorYTD = ( adttBalanceSheetFiveYearHistory + 1 );
const adttIncomeStatementActiveYTD = ( adttBalanceSheetActiveYTDPriorYTD + 1 );
const adttIncomeStatementActiveYTDAC = ( adttIncomeStatementActiveYTD + 1 );
const adttIncomeStatementActiveYTD2 = ( adttIncomeStatementActiveYTDAC + 1 );
const adttIncomeStatementActiveBudget = ( adttIncomeStatementActiveYTD2 + 1 );
const adttIncomeStatementActivePrior = ( adttIncomeStatementActiveBudget + 1 );
const adttIncomeStatementActivePriorYTD = ( adttIncomeStatementActivePrior + 1 );
const adttIncomeStatementActiveBudgetPriorYTD = ( adttIncomeStatementActivePriorYTD + 1 );
const adttIncomeStatementActiveBudgetYTD = ( adttIncomeStatementActiveBudgetPriorYTD + 1 );
const adttIncomeStatementDraftActivePriorYTD = ( adttIncomeStatementActiveBudgetYTD + 1 );
const adttIncomeStatementFiveYearHistory = ( adttIncomeStatementDraftActivePriorYTD + 1 );
const adttIncomeStatementActiveYTDPriorYTD = ( adttIncomeStatementFiveYearHistory + 1 );
const adttStatementOfCashFlowActiveYTD = ( adttIncomeStatementActiveYTDPriorYTD + 1 );
const adttStatementOfCashFlowActiveYTDAC = ( adttStatementOfCashFlowActiveYTD + 1 );
const adttStatementOfCashFlowActiveBudget = ( adttStatementOfCashFlowActiveYTDAC + 1 );
const adttStatementOfCashFlowActivePrior = ( adttStatementOfCashFlowActiveBudget + 1 );
const adttStatementOfCashFlowActivePriorYTD = ( adttStatementOfCashFlowActivePrior + 1 );
const adttStatementOfCashFlowActiveBudgetPriorYTD = ( adttStatementOfCashFlowActivePriorYTD + 1 );
const adttStatementOfCashFlowActiveBudgetYTD = ( adttStatementOfCashFlowActiveBudgetPriorYTD + 1 );
const adttStatementOfCashFlowDraftActivePriorYTD = ( adttStatementOfCashFlowActiveBudgetYTD + 1 );
const adttStatementOfCashFlowFiveYearHistory = ( adttStatementOfCashFlowDraftActivePriorYTD + 1 );
const adttStatementOfCashFlowActiveYTDPriorYTD = ( adttStatementOfCashFlowFiveYearHistory + 1 );
const adttGeneralLedgerAccountDateOrder = ( adttStatementOfCashFlowActiveYTDPriorYTD + 1 );
const adttGeneralLedgerAccountDateOrderSubtotals = ( adttGeneralLedgerAccountDateOrder + 1 );
const adttAdjustingEntriesNormal = ( adttGeneralLedgerAccountDateOrderSubtotals + 1 );
const adttAdjustingEntriesReclassifying = ( adttAdjustingEntriesNormal + 1 );
const adttAdjustingEntriesUnrecorded = ( adttAdjustingEntriesReclassifying + 1 );
const adttAdjustingEntriesEliminating = ( adttAdjustingEntriesUnrecorded + 1 );
const adttAdjustingEntriesAll = ( adttAdjustingEntriesEliminating + 1 );
const adttAdjustingEntriesTaxFederal = ( adttAdjustingEntriesAll + 1 );
const adttAdjustingEntriesTaxState = ( adttAdjustingEntriesTaxFederal + 1 );
const adttAdjustingEntriesTaxCity = ( adttAdjustingEntriesTaxState + 1 );
const adttAdjustingEntriesPrior = ( adttAdjustingEntriesTaxCity + 1 );
const adttClosingEntries = ( adttAdjustingEntriesPrior + 1 );
const adttOpeningEntries = ( adttClosingEntries + 1 );
const adttAccountsPayable = ( adttOpeningEntries + 1 );
const adttCashDisbursements = ( adttAccountsPayable + 1 );
const adttCashReciepts = ( adttCashDisbursements + 1 );
const adttGeneral = ( adttCashReciepts + 1 );
const adttPayroll = ( adttGeneral + 1 );
const adttPurchaseLedger = ( adttPayroll + 1 );
const adttStandardEntries = ( adttPurchaseLedger + 1 );
const adttSales = ( adttStandardEntries + 1 );
const adttCustom = ( adttSales + 1 );
const adttLeadsheetGroupingAccountBalancesTotals = ( adttCustom + 1 );
const adttLeadsheetGroupingAccountBalancesGroupSubtotals = ( adttLeadsheetGroupingAccountBalancesTotals + 1 );
const adttLeadsheetGroupingGroupSummary = ( adttLeadsheetGroupingAccountBalancesGroupSubtotals + 1 );
const adttLeadsheetGroupingDetailedTotals = ( adttLeadsheetGroupingGroupSummary + 1 );
const adttLeadsheetGroupingHierarchySubtotals = ( adttLeadsheetGroupingDetailedTotals + 1 );
const adttLeadsheetGroupingHierarchySummary = ( adttLeadsheetGroupingHierarchySubtotals + 1 );
const adttMemorandum = ( adttLeadsheetGroupingHierarchySummary + 1 );
const adttProgramChecklistChecklist1 = ( adttMemorandum + 1 );
const adttProgramChecklistChecklist2 = ( adttProgramChecklistChecklist1 + 1 );
const adttProgramChecklistProgram1 = ( adttProgramChecklistChecklist2 + 1 );
const adttProgramChecklistProgram2 = ( adttProgramChecklistProgram1 + 1 );
const adttProgramChecklistProgramAssertions1 = ( adttProgramChecklistProgram2 + 1 );
const adttProgramChecklistProgramAssertions2 = ( adttProgramChecklistProgramAssertions1 + 1 );
const adttSpreadsheetAnalysisAccruedExpenses = ( adttProgramChecklistProgramAssertions2 + 1 );
const adttSpreadsheetAnalysisCapitalAssets = ( adttSpreadsheetAnalysisAccruedExpenses + 1 );
const adttSpreadsheetAnalysisInvestments = ( adttSpreadsheetAnalysisCapitalAssets + 1 );
const adttSpreadsheetAnalysisNotesPayable = ( adttSpreadsheetAnalysisInvestments + 1 );
const adttSpreadsheetAnalysisPrepaidAnalysis = ( adttSpreadsheetAnalysisNotesPayable + 1 );
const adttSpreadsheetAnalysisGenericSingle = ( adttSpreadsheetAnalysisPrepaidAnalysis + 1 );
const adttSpreadsheetAnalysisGenericDouble = ( adttSpreadsheetAnalysisGenericSingle + 1 );
const adttSpreadsheetAnalysisGenericTriple = ( adttSpreadsheetAnalysisGenericDouble + 1 );
const adttSpreadsheetAnalysisGenericTwelve = ( adttSpreadsheetAnalysisGenericTriple + 1 );
const adttTaxReconciliationDetailTaxLineSubLine = ( adttSpreadsheetAnalysisGenericTwelve + 1 );
const adttTaxReconciliationTaxSubLineSummary = ( adttTaxReconciliationDetailTaxLineSubLine + 1 );
const adttTaxReconciliationTaxLineSummary = ( adttTaxReconciliationTaxSubLineSummary + 1 );
const adttTickmarks = ( adttTaxReconciliationTaxLineSummary + 1 );
const adttTrialBalanceAccountBalances = ( adttTickmarks + 1 );
const adttTrialBalanceAccountFinalBalances = ( adttTrialBalanceAccountBalances + 1 );
const adttTrialBalanceAccountBalancesGroupSubtotals = ( adttTrialBalanceAccountFinalBalances + 1 );
const adttTrialBalanceAccountBalancesSplitUp = ( adttTrialBalanceAccountBalancesGroupSubtotals + 1 );
const adttTrialBalanceGroupHierarchySubtotals = ( adttTrialBalanceAccountBalancesSplitUp + 1 );
const adttTrialBalanceHierarchySubtotals = ( adttTrialBalanceGroupHierarchySubtotals + 1 );
const adttTrialBalanceGroupSummary = ( adttTrialBalanceHierarchySubtotals + 1 );
const adttTrialBalanceDetailedEntriesTotals = ( adttTrialBalanceGroupSummary + 1 );
const adttUnadjustedDifferences = ( adttTrialBalanceDetailedEntriesTotals + 1 );
const adttIssuesCreatedBy = ( adttUnadjustedDifferences + 1 );
const adttIssuesAssignedTo = ( adttIssuesCreatedBy + 1 );
const edttLocal = 32767;
const adttAdjustingEntriesOtherBasis = ( edttLocal + 1 );
const adttHistorySignOutIn = ( adttIssuesAssignedTo + 3 );
const adttHistoryAdjustingJournalEntry = ( adttHistorySignOutIn + 1 );
const adttHistoryFileAccess = ( adttHistoryAdjustingJournalEntry + 1 );
const adttHistoryDocumentCreation = ( adttHistoryFileAccess + 1 );
const adttHistoryDocumentModification = ( adttHistoryDocumentCreation + 1 );
const adttHistoryCheckOutIn = ( adttHistoryDocumentModification + 1 );
const adttHistoryRoleCompletion = ( adttHistoryCheckOutIn + 1 );
const adttHistoryDocumentDeletion = ( adttHistoryRoleCompletion + 1 );
const adttHistoryIssueCreation = ( adttHistoryDocumentDeletion + 1 );
const adttHistoryDocumentAccess = ( adttHistoryIssueCreation + 1 );
const adttHistoryAllHistoryEvents = ( adttHistoryDocumentAccess + 1 );
const adttHistoryPostLockdownEvents = ( adttHistoryAllHistoryEvents + 1 );
const adttIssuesCompletedBy = ( adttHistoryPostLockdownEvents + 1 );
const adttIssuesClearedBy = ( adttIssuesCompletedBy + 1 );
const adttAdjustingEntriesProjected = ( adttIssuesClearedBy + 1 );
const adttAdjustingEntriesJudgmental = ( adttAdjustingEntriesProjected + 1 );
const adttAdjustingEntriesOther2 = ( adttAdjustingEntriesJudgmental + 1 );
const adttAdjustingEntriesOther3 = ( adttAdjustingEntriesOther2 + 1 );
const adttAllOtherEntries = ( adttAdjustingEntriesOther3 + 1 );
const adttConsolidationNormal = ( adttAllOtherEntries + 1 );
const adttConsolidationDetails = ( adttConsolidationNormal + 1 );

// CWRoundingType
const rdtNone = 0;
const rdtOnes = 1;
const rdtThousands = 1000;
const rdtMillions = 10000000;
const rdtBillions = 1000000000;
const rdtTenThousands = 10000;
const rdtHunderedMillions = 100000000;

// CWDocOrderType
const dotAccount = 0;
const dotMapNumber = ( dotAccount + 1 );
const dotReport = ( dotMapNumber + 1 );
const dotGroup1 = ( dotReport + 1 );
const dotGroup2 = ( dotGroup1 + 1 );
const dotGroup3 = ( dotGroup2 + 1 );
const dotGroup4 = ( dotGroup3 + 1 );
const dotGroup5 = ( dotGroup4 + 1 );
const dotGroup6 = ( dotGroup5 + 1 );
const dotGroup7 = ( dotGroup6 + 1 );
const dotGroup8 = ( dotGroup7 + 1 );
const dotGroup9 = ( dotGroup8 + 1 );
const dotGroup10 = ( dotGroup9 + 1 );
const dotTaxCode = ( dotGroup10 + 1 );
const dotGIFI = ( dotTaxCode + 1 );

// CWDocGroupingType
const dgtGroup1 = 0;
const dgtGroup2 = ( dgtGroup1 + 1 );
const dgtGroup3 = ( dgtGroup2 + 1 );
const dgtGroup4 = ( dgtGroup3 + 1 );
const dgtGroup5 = ( dgtGroup4 + 1 );
const dgtGroup6 = ( dgtGroup5 + 1 );
const dgtGroup7 = ( dgtGroup6 + 1 );
const dgtGroup8 = ( dgtGroup7 + 1 );
const dgtGroup9 = ( dgtGroup8 + 1 );
const dgtGroup10 = ( dgtGroup9 + 1 );
const dgtMapNumber = ( dgtGroup10 + 1 );
const dgtTaxCode = ( dgtMapNumber + 1 );
const dgtGIFI = ( dgtTaxCode + 1 );

// CWDocBalanceType
const dbtReport = 0;
const dbtUnadjusted = ( dbtReport + 1 );
const dbtAdjusted = ( dbtUnadjusted + 1 );
const dbtConsolidated = ( dbtAdjusted + 1 );
const dbtTaxFederal = ( dbtConsolidated + 1 );
const dbtTaxState = ( dbtTaxFederal + 1 );
const dbtTaxCity = ( dbtTaxState + 1 );

// CWDocBalanceTypeZero
const dbtzZero = 0;
const dbtzReport = ( dbtzZero + 1 );
const dbtzUnadjusted = ( dbtzReport + 1 );
const dbtzAdjusted = ( dbtzUnadjusted + 1 );
const dbtzConsolidated = ( dbtzAdjusted + 1 );
const dbtzTaxFederal = ( dbtzConsolidated + 1 );
const dbtzTaxState = ( dbtzTaxFederal + 1 );
const dbtzTaxCity = ( dbtzTaxState + 1 );

// CWDocBalancesType
const dbstActivePrior = 0;
const dbstActivePreceding = ( dbstActivePrior + 1 );
const dbstActiveBudget = ( dbstActivePreceding + 1 );
const dbstActiveForecast = ( dbstActiveBudget + 1 );
const dbstFiveYear = ( dbstActiveForecast + 1 );
const dbstFiveYearBudget = ( dbstFiveYear + 1 );
const dbstFiveYearForecast = ( dbstFiveYearBudget + 1 );
const dbstUserDefined = ( dbstFiveYearForecast + 1 );

// CWYearType
const ytCurrent = 0;
const ytPrior1 = ( ytCurrent + 1 );
const ytPrior2 = ( ytPrior1 + 1 );
const ytPrior3 = ( ytPrior2 + 1 );
const ytPrior4 = ( ytPrior3 + 1 );

// CWForecastYearType
const yftCurrent = 0;
const yftFuture1 = ( yftCurrent + 1 );
const yftFuture2 = ( yftFuture1 + 1 );
const yftFuture3 = ( yftFuture2 + 1 );
const yftFuture4 = ( yftFuture3 + 1 );

// CWCopyGroupingsToType
const cgttFirstAvailable = 0;
const cgttGrouping1 = ( cgttFirstAvailable + 1 );
const cgttGrouping2 = ( cgttGrouping1 + 1 );
const cgttGrouping3 = ( cgttGrouping2 + 1 );
const cgttGrouping4 = ( cgttGrouping3 + 1 );
const cgttGrouping5 = ( cgttGrouping4 + 1 );
const cgttGrouping6 = ( cgttGrouping5 + 1 );
const cgttGrouping7 = ( cgttGrouping6 + 1 );
const cgttGrouping8 = ( cgttGrouping7 + 1 );
const cgttGrouping9 = ( cgttGrouping8 + 1 );
const cgttGrouping10 = ( cgttGrouping9 + 1 );

// CWCopyFlagType
const cftNone = 0;
const cftCopy = ( cftNone + 1 );
const cftCopyClearCells = ( cftCopy + 1 );
const cftCopyClearParagraphs = ( cftCopyClearCells + 1 );
const cftCopyClearBoth = ( cftCopyClearParagraphs + 1 );

// CWThresholdType
const ttAnd = 0;
const ttOr = ( ttAnd + 1 );

// CWGetAccountsType
const gatAccount = 0;
const gatReport = ( gatAccount + 1 );
const gatCashFlow = ( gatReport + 1 );
const gatPerformance = ( gatCashFlow + 1 );
const gatDistributable = ( gatPerformance + 1 );
const gatFlipped = ( gatDistributable + 1 );

// CWPriorityType
const ptLow = 0;
const ptNormal = ( ptLow + 1 );
const ptHigh = ( ptNormal + 1 );

// CWStatusType
const stNotStarted = 0;
const stInProgress = ( stNotStarted + 1 );
const stWaitingOnSomeone = ( stInProgress + 1 );
const stDeferred = ( stWaitingOnSomeone + 1 );
const stCompleted = ( stDeferred + 1 );

// CWRoundType
const rtDefault = 0;
const rtRound = ( rtDefault + 1 );
const rtRoundAccount = ( rtRound + 1 );

// CWPropertyType
const ptNA = 0;
const ptCumulative = ( ptNA + 1 );
const ptNonCumulative = ( ptCumulative + 1 );

// CWFlipType
const ftIndividual = 0;
const ftDebit = ( ftIndividual + 1 );
const ftCredit = ( ftDebit + 1 );
const ftDebitSubs = ( ftCredit + 1 );
const ftCreditSubs = ( ftDebitSubs + 1 );
const ftParent = ( ftCreditSubs + 1 );
const ftDebitsCredits = ( ftParent + 1 );

// CWEmployeeType
const etActive = 0;
const etInactive = ( etActive + 1 );
const etActiveTimekeeper = ( etInactive + 1 );
const etInactiveTimekeeper = ( etActiveTimekeeper + 1 );
const etDefaultAdministrator = ( etInactiveTimekeeper + 1 );

// CWCaseViewAccessLevelType
const cvatNoAccess = 0;
const cvatLevel1 = ( cvatNoAccess + 1 );
const cvatLevel2 = ( cvatLevel1 + 1 );
const cvatLevel3 = ( cvatLevel2 + 1 );
const cvatLevel4 = ( cvatLevel3 + 1 );
const cvatLevel5 = ( cvatLevel4 + 1 );
const cvatLevel6 = ( cvatLevel5 + 1 );
const cvatLevel7 = ( cvatLevel6 + 1 );
const cvatLevel8 = ( cvatLevel7 + 1 );
const cvatLevel9 = ( cvatLevel8 + 1 );
const cvatLevel10 = ( cvatLevel9 + 1 );

// CWAccessRightType
const artProtectionSetStaff = 0;
const artProtectionSetGroupSetup = ( artProtectionSetStaff + 1 );
const artProtectionSetUserSetup = ( artProtectionSetGroupSetup + 1 );
const artProtectionSetProtection = ( artProtectionSetUserSetup + 1 );
const artFileCopyTemplate = ( artProtectionSetProtection + 1 );
const artFileModifyClientProfile = ( artFileCopyTemplate + 1 );
const artFileImport = ( artFileModifyClientProfile + 1 );
const artFileExport = ( artFileImport + 1 );
const artFileConsolidate = ( artFileExport + 1 );
const artFileYearEndCloseAndRollForward = ( artFileConsolidate + 1 );
const artFilePrintBatch = ( artFileYearEndCloseAndRollForward + 1 );
const artFileLockAndUnlockClientFile = ( artFilePrintBatch + 1 );
const artFileAccessLockedClientFile = ( artFileLockAndUnlockClientFile + 1 );
const artAccountAdjustingJournalEntries = ( artFileAccessLockedClientFile + 1 );
const artAccountOtherJournalEntries = ( artAccountAdjustingJournalEntries + 1 );
const artAccountWorkingTrialBalance = ( artAccountOtherJournalEntries + 1 );
const artAccountAssignMappingNumbers = ( artAccountWorkingTrialBalance + 1 );
const artAccountMapping = ( artAccountAssignMappingNumbers + 1 );
const artAccountSetupGroups = ( artAccountMapping + 1 );
const artAccountAllowAddition = ( artAccountSetupGroups + 1 );
const artAccountAllowDeletion = ( artAccountAllowAddition + 1 );
const artAccountAllowChange = ( artAccountAllowDeletion + 1 );
const artAccountAllowViewing = ( artAccountAllowChange + 1 );
const artWorkingTrialBalanceAccount = ( artAccountAllowViewing + 1 );
const artWorkingTrialBalanceReport = ( artWorkingTrialBalanceAccount + 1 );
const artWorkingTrialBalanceCashFlow = ( artWorkingTrialBalanceReport + 1 );
const artWorkingTrialBalanceGrouping = ( artWorkingTrialBalanceCashFlow + 1 );
const artWorkingTrialBalanceTax = ( artWorkingTrialBalanceGrouping + 1 );
const artWorkingTrialBalanceForeignExchange = ( artWorkingTrialBalanceTax + 1 );
const artWorkingTrialBalancePerformanceMeasures = ( artWorkingTrialBalanceForeignExchange + 1 );
const artWorkingTrialBalanceSplitUpAccounts = ( artWorkingTrialBalancePerformanceMeasures + 1 );
const artWorkingTrialBalanceReportSettings = ( artWorkingTrialBalanceSplitUpAccounts + 1 );
const artMappingAllowModification = ( artWorkingTrialBalanceReportSettings + 1 );
const artMappingAllowAddition = ( artMappingAllowModification + 1 );
const artMappingAllowDeletion = ( artMappingAllowAddition + 1 );
const artMappingAllowChange = ( artMappingAllowDeletion + 1 );
const artMappingAllowViewing = ( artMappingAllowChange + 1 );
const artDocumentSetDocumentAssignment = ( artMappingAllowViewing + 1 );
const artDocumentAddNewDocument = ( artDocumentSetDocumentAssignment + 1 );
const artDocumentAllowOpenWithoutAssignment = ( artDocumentAddNewDocument + 1 );
const artDocumentAllowDeleteWithoutAssignment = ( artDocumentAllowOpenWithoutAssignment + 1 );
const artDocumentAllowModifyWithoutAssignment = ( artDocumentAllowDeleteWithoutAssignment + 1 );
const artDocumentCanSignOffRole1 = ( artDocumentAllowModifyWithoutAssignment + 1 );
const artDocumentCanSignOffRole2 = ( artDocumentCanSignOffRole1 + 1 );
const artDocumentCanSignOffRole3 = ( artDocumentCanSignOffRole2 + 1 );
const artDocumentCanSignOffRole4 = ( artDocumentCanSignOffRole3 + 1 );
const artDocumentAllowSignOffByAnyone = ( artDocumentCanSignOffRole4 + 1 );
const artToolsRepairFile = ( artDocumentAllowSignOffByAnyone + 1 );
const artToolsDiagnostics = ( artToolsRepairFile + 1 );
const artToolsTickmarks = ( artToolsDiagnostics + 1 );
const artToolsHelperApplications = ( artToolsTickmarks + 1 );
const artToolsFontSettings = ( artToolsHelperApplications + 1 );
const artToolsSetAnalyticalReview = ( artToolsFontSettings + 1 );
const artToolsCustomize = ( artToolsSetAnalyticalReview + 1 );
const artToolsUndoCheckOut = ( artToolsCustomize + 1 );
const artOptionsRoles = ( artToolsUndoCheckOut + 1 );
const artOptionsDocument = ( artOptionsRoles + 1 );
const artOptionsListsJournals = ( artOptionsDocument + 1 );
const artOptionsListsTaxCodes = ( artOptionsListsJournals + 1 );
const artOptionsListsUnits = ( artOptionsListsTaxCodes + 1 );
const artOptionsAdvanced = ( artOptionsListsUnits + 1 );
const artFileArchive = ( artOptionsAdvanced + 1 );
const artDocumentCanSignOffRole5 = ( artFileArchive + 1 );
const artDocumentCanSignOffRole6 = ( artDocumentCanSignOffRole5 + 1 );
const artDocumentCanSignOffRole7 = ( artDocumentCanSignOffRole6 + 1 );
const artDocumentCanSignOffRole8 = ( artDocumentCanSignOffRole7 + 1 );
const artProtectionAllowCopyTempSecuritySettings = ( artDocumentCanSignOffRole8 + 1 );
const artDocumentAllowSignOffWithoutAssignment = ( artProtectionAllowCopyTempSecuritySettings + 1 );
const artOptionsListsCustomBalances = ( artDocumentAllowSignOffWithoutAssignment + 1 );
const artFileModifyIssuesCreatedByOtherUsers = ( artOptionsListsCustomBalances + 1 );
const artProtectionAllowAssignUserToOwnGroups = ( artFileModifyIssuesCreatedByOtherUsers + 1 );
const artFileModifyHistorySettings = ( artProtectionAllowAssignUserToOwnGroups + 1 );
const artFileAllowSignInFilesSignedOutByOthers = ( artFileModifyHistorySettings + 1 );
const artFileLockDown = ( artFileAllowSignInFilesSignedOutByOthers + 1 );
const artAccountAllowLockingUnlocking = ( artFileLockDown + 1 );
const artOptionsLayout = ( artAccountAllowLockingUnlocking + 1 );
const artFileLockClientFile = ( artOptionsLayout + 1 );
const artFileUnlockClientFile = ( artFileLockClientFile + 1 );
const artFileIssueCompleteWithoutAssigned = ( artFileUnlockClientFile + 1 );
const artDocumentCanModifySignOffDate = ( artFileIssueCompleteWithoutAssigned + 1 );
const artFileIssueModifyTypes = ( artDocumentCanModifySignOffDate + 1 );
const artToolsDeleteMilestones = ( artFileIssueModifyTypes + 1 );
const artAccountAJAllowDeletion = ( artToolsDeleteMilestones + 1 );
const artToolsAbandonSyncCopies = ( artAccountAJAllowDeletion + 1 );
const artDocumentSignoffBreakRequirements = ( artToolsAbandonSyncCopies + 1 );
const artDocumentCanModifySharedFilters = ( artDocumentSignoffBreakRequirements + 1 );
const artDocumentDeleteRecyclebin = ( artDocumentCanModifySharedFilters + 1 );
const artFileOpenDirectly = ( artDocumentDeleteRecyclebin + 1 );
const artFileTemplateUpdate = ( artFileOpenDirectly + 1 );
const artFilePublishClientFile = ( artFileTemplateUpdate + 1 );
const artOptionsLanguages = ( artFilePublishClientFile + 1 );

// CWPositionType
const ptBeforeTop = 0;
const ptAfterBottom = ( ptBeforeTop + 1 );
const ptLevelBefore = ( ptAfterBottom + 1 );
const ptLevelAfter = ( ptLevelBefore + 1 );

// CWHistoryCategoryType
const hcUser = 0;
const hcSignout = ( hcUser + 1 );
const hcDocumentCreate = ( hcSignout + 1 );
const hcDocument = ( hcDocumentCreate + 1 );
const hcCheckOut = ( hcDocument + 1 );
const hcSignoff = ( hcCheckOut + 1 );
const hcDocumentDelete = ( hcSignoff + 1 );
const hcMilestone = ( hcDocumentDelete + 1 );
const hcTask = ( hcMilestone + 1 );
const hcAccess = ( hcTask + 1 );
const hcAdjustingJournalEntry = ( hcAccess + 1 );
const hcRecycleBin = ( hcAdjustingJournalEntry + 1 );
const hcFileCreated = ( hcRecycleBin + 1 );
const hcFileAccess = ( hcFileCreated + 1 );
const hcYEC = ( hcFileAccess + 1 );
const hcTemplateUpdate = ( hcYEC + 1 );

// CWHistoryEventType
const heUser = 0;
const heDocumentDeleted = ( heUser + 1 );
const heDocumentPropertyChanged = ( heDocumentDeleted + 1 );
const heDocumentCreated = ( heDocumentPropertyChanged + 1 );
const heDocumentCopied = ( heDocumentCreated + 1 );
const heDocumentPasted = ( heDocumentCopied + 1 );
const heDocumentDropped = ( heDocumentPasted + 1 );
const heDocumentAccessed = ( heDocumentDropped + 1 );
const heDocumentCheckedOut = ( heDocumentAccessed + 1 );
const heDocumentCheckedIn = ( heDocumentCheckedOut + 1 );
const heMilestoneSaved = ( heDocumentCheckedIn + 1 );
const heDocumentSignedOff = ( heMilestoneSaved + 1 );
const heDocumentSignedOff1 = ( heDocumentSignedOff + 1 );
const heDocumentSignedOff2 = ( heDocumentSignedOff1 + 1 );
const heDocumentSignedOff3 = ( heDocumentSignedOff2 + 1 );
const heDocumentSignedOff4 = ( heDocumentSignedOff3 + 1 );
const heFileCheckedOut = ( heDocumentSignedOff4 + 1 );
const heFileCheckedIn = ( heFileCheckedOut + 1 );
const heFileDatesChanged = ( heFileCheckedIn + 1 );
const heAJECreated = ( heFileDatesChanged + 1 );
const heAJEDeleted = ( heAJECreated + 1 );
const heAJEImported = ( heAJEDeleted + 1 );
const heTaskCrated = ( heAJEImported + 1 );
const heFileSignedOut = ( heTaskCrated + 1 );
const heFileSignedIn = ( heFileSignedOut + 1 );
const heDocumentSignedOff5 = ( heFileSignedIn + 1 );
const heDocumentSignedOff6 = ( heDocumentSignedOff5 + 1 );
const heDocumentSignedOff7 = ( heDocumentSignedOff6 + 1 );
const heDocumentSignedOff8 = ( heDocumentSignedOff7 + 1 );
const heAJERenumbered = ( heDocumentSignedOff8 + 1 );
const heFileSignOutUndone = ( heAJERenumbered + 1 );
const heDocumentRecycled = ( heFileSignOutUndone + 1 );
const heDocumentRestored = ( heDocumentRecycled + 1 );
const heDocumentDeletedTemplate = ( heDocumentRestored + 1 );
const heDocumentPropertyTemplate = ( heDocumentDeletedTemplate + 1 );
const heDocumentVersionTemplate = ( heDocumentPropertyTemplate + 1 );
const heDocumentCreatedTemplate = ( heDocumentVersionTemplate + 1 );
const heDocumentMoved = ( heDocumentCreatedTemplate + 1 );
const heDocumentConvertedToPDF = ( heDocumentMoved + 1 );
const heDocumentTaskCompleted = ( heDocumentConvertedToPDF + 1 );
const heFileAccessedByUser = ( heDocumentTaskCompleted + 1 );
const heDocumentLockedDown = ( heFileAccessedByUser + 1 );
const heDocumentMilestonesRegenerated = ( heDocumentLockedDown + 1 );
const heDocumentMilestonesConverted = ( heDocumentMilestonesRegenerated + 1 );
const heDocumentMilestonesSet = ( heDocumentMilestonesConverted + 1 );
const heFileMilestonesSet = ( heDocumentMilestonesSet + 1 );
const heFileLockedDown = ( heFileMilestonesSet + 1 );
const heFileUnlocked = ( heFileLockedDown + 1 );
const heFileUndoLockDown = ( heFileUnlocked + 1 );
const heFileLockdownSet = ( heFileUndoLockDown + 1 );
const heFileLockdownRemovePending = ( heFileLockdownSet + 1 );
const heFileLockdownMilestonesRegenerated = ( heFileLockdownRemovePending + 1 );
const heFileLockdownMilestonesRegeneratedAutoDocs = ( heFileLockdownMilestonesRegenerated + 1 );
const heFileCreatedYEC = ( heFileLockdownMilestonesRegeneratedAutoDocs + 1 );
const heFileCreatedFileNew = ( heFileCreatedYEC + 1 );
const heFileCreatedCopyTemplate = ( heFileCreatedFileNew + 1 );
const heYEC = ( heFileCreatedCopyTemplate + 1 );
const heTemplateUpdate = ( heYEC + 1 );

// CWMileStoneSaveType
const msNothing = 0;
const msChecksum = ( msNothing + 1 );
const msPerEventType = ( msChecksum + 1 );
const msPerUser = ( msPerEventType + 1 );
const msPerEvent = ( msPerUser + 1 );

// CWAnnotationType
const anUnknown = 0;
const anNote = ( anUnknown + 1 );
const anTickmark = ( anNote + 1 );
const anReference = ( anTickmark + 1 );
const anLegacy = ( anReference + 1 );
const anUserText = ( anLegacy + 1 );
const anAlias = ( anUserText + 1 );
const anHyperlink = ( anAlias + 1 );
const anHighlight = ( anHyperlink + 1 );
const anIssue = ( anHighlight + 1 );

// CWAnnotationPointType
const apAccount = 0;
const apAJE = ( apAccount + 1 );
const apAJEItem = ( apAJE + 1 );
const apOtherEntry = ( apAJEItem + 1 );
const apDocument = ( apOtherEntry + 1 );
const apOther = ( apDocument + 1 );

// CWAutoMapField
const amfId = 1;
const amfName = ( amfId + 1 );
const amfExDescription = ( amfName + 1 );
const amfTitle = ( amfExDescription + 1 );
const amfAccountType = ( amfTitle + 1 );
const amfSignType = ( amfAccountType + 1 );
const amfClassType = ( amfSignType + 1 );
const amfGrouping = ( amfClassType + 1 );
const amfg1 = 0x10008;
const amfg2 = 0x20008;
const amfg3 = 0x30008;
const amfg4 = 0x40008;
const amfg5 = 0x50008;
const amfg6 = 0x60008;
const amfg7 = 0x70008;
const amfg8 = 0x80008;
const amfg9 = 0x90008;
const amfg10 = 0xa0008;
const amfAccumulatorType = 9;
const amfTaxCode = ( amfAccumulatorType + 1 );
const amfGIFI = ( amfTaxCode + 1 );
const amfUnits = ( amfGIFI + 1 );
const amfBehaviourType = 14;
const amfTaxExportCode = ( amfBehaviourType + 1 );
const amfMappingFlip = ( amfTaxExportCode + 1 );
const amfCalculation = ( amfMappingFlip + 1 );
const amfGroupingFlip = ( amfCalculation + 1 );
const amfUnits2 = ( amfGroupingFlip + 1 );
const amfRate = ( amfUnits2 + 1 );
const amfProperty = ( amfRate + 1 );
const amfFlipType = ( amfProperty + 1 );
const amfReportProperties = ( amfFlipType + 1 );
const amfrpAccumulatorType = 0x10017;
const amfrpPercentMapping = 0x20017;
const amfrpCurrencySymbol = 0x30017;
const amfrpUnderlineType = 0x40017;
const amfrpNewPage = 0x50017;
const amfrpColumnPosition = 0x60017;
const amfrpPrintFeature = 0x70017;
const amfrpCashFlowCreditAccount = 0x80017;
const amfrpCashFlowDebitAccount = 0x90017;
const amfrpUpdateCashFlowAccounts = 0xa0017;
const amfrpCalculateBalanceUsing = 0xb0017;
const amfTaxEntityCode = 25;
const amfTaxEntityCodeNone = 0x19;
const amfTaxEntityCodeCorporation = 0x10019;
const amfTaxEntityCodeSCorporation = 0x20019;
const amfTaxEntityCodePartnership = 0x30019;
const amfTaxEntityCodeNonProfit = 0x40019;

// CWItemType
const typeDocument = 0;
const typeMapping = ( typeDocument + 1 );
const typeGrouping = ( typeMapping + 1 );
const typeEntity = ( typeGrouping + 1 );
const typeAccount = ( typeEntity + 1 );
const typeSplitUpAccount = ( typeAccount + 1 );
const typeAdjustingEntry = ( typeSplitUpAccount + 1 );
const typeAdjustingEntryItem = ( typeAdjustingEntry + 1 );
const typeOtherEntry = ( typeAdjustingEntryItem + 1 );
const typeTaxExportCode = ( typeOtherEntry + 1 );
const typeAnnotation = ( typeTaxExportCode + 1 );
const typeTickmark = ( typeAnnotation + 1 );
const typeIssue = ( typeTickmark + 1 );
const typeHistoryEvent = ( typeIssue + 1 );
const typeTaxonomy = ( typeHistoryEvent + 1 );
const typeTaxonElement = ( typeTaxonomy + 1 );
const typeSecurityEmployee = ( typeTaxonElement + 1 );
const typeCustomBalanceIdentifier = ( typeSecurityEmployee + 1 );
const typeAccountDistribution = ( typeCustomBalanceIdentifier + 1 );
const typeAccountDistributionItem = ( typeAccountDistribution + 1 );
const typeGlobalGroup = ( typeAccountDistributionItem + 1 );
const typeGlobalUser = ( typeGlobalGroup + 1 );
const typePurge = ( typeGlobalUser + 1 );
const typeLanguageIdentifier = ( typePurge + 1 );
const typeTemplateToolbarButton = ( typeLanguageIdentifier + 1 );
const typeRoleSet = ( typeTemplateToolbarButton + 1 );
const typeCaseViewDataItem = ( typeRoleSet + 1 );

// CWAutoFillAction
const autoFillDefault = 0;
const autoFillBlank = ( autoFillDefault + 1 );
const autoFillAll = ( autoFillBlank + 1 );
const autofillSelected = ( autoFillAll + 1 );

// CWImportPackage
const ipNoPackageSelected = 0;
const ipAccountView = 1;
const ipASCII = 2;
const ipProSysEngagement = 3;
const ipXAF = 4;

// CWImportComponents
const icTrialBalance = 0;
const icGeneralLedger = ( icTrialBalance + 1 );
const icAdjustingJournalEntry = ( icGeneralLedger + 1 );

// CWImportSetting
const AVUsePartnerCode = 0;
const AVPriorYearData = ( AVUsePartnerCode + 1 );
const AVUseCostCenterCode = ( AVPriorYearData + 1 );
const AVNonfinancialData = ( AVUseCostCenterCode + 1 );
const AVOverwriteExistingJournals = ( AVNonfinancialData + 1 );
const AVOverwriteAccDescription = ( AVOverwriteExistingJournals + 1 );
const ProSysImportClientInfomation = ( AVOverwriteAccDescription + 1 );
const ProSysImportClientDocuments = ( ProSysImportClientInfomation + 1 );
const ProSysImportAdjEntries = ( ProSysImportClientDocuments + 1 );
const ProSysImportGL = ( ProSysImportAdjEntries + 1 );
const ProSysAddDocNo = ( ProSysImportGL + 1 );
const ProSysCreateVirtualRoot = ( ProSysAddDocNo + 1 );
const XafUpdateYearEndDate = ( ProSysCreateVirtualRoot + 1 );
const XafUpdateClientInformation = ( XafUpdateYearEndDate + 1 );
const XafVersion3OrAbove = ( XafUpdateClientInformation + 1 );
const XafLeadCodeAsXBRL = ( XafVersion3OrAbove + 1 );
const XafImportJournalOutsideFiscalYear = ( XafLeadCodeAsXBRL + 1 );
const AsciiClearExistingAJE = ( XafImportJournalOutsideFiscalYear + 1 );
const AsciiAccumulateAJE = ( AsciiClearExistingAJE + 1 );

// CWExportPackage
const epNoPackageSelected = 0;
const epAccountView = 1;
const epGIFI = 2;

// CWExportSetting
const ExpEntitySpecificExport = 1;
const ExpIncludeSubEntities = 2;
const ExpUseExtendedDescription = 4;
const ExpDateFormatMMDDYY = 8;
const ExpGIFIBalances = 16;
const ExpGIFINotes = 32;
const ExpGIFIFlipBalances = 64;
const ExpGIFIExportBalanceSheet = 128;
const ExpGIFIExportMultipleIncomeStatements = 256;
const ExpGIFIExportTopLevelEntity = 512;
const ExpGIFIExportForeignExchange = 1024;

// CWCustomBalanceYearsType
const typeCurrentPast = 0;
const typeCurrentFuture = ( typeCurrentPast + 1 );

// CvDataType
const CvDataTypeAuto = -1;
const CvDataTypeNumeric = 0;
const CvDataTypeText = 1;
const CvDataTypeDate = 2;
const CvDataTypePopup = 3;
const CvDataTypeMemoText = 4;
const CvDataTypeMemoPopup = 5;

// CvDataOvrFlag
const CvDataOvrAuto = -1;
const CvDataOvrNo = 0;
const CvDataOvrYes = 1;

// CWTemplateItemType
const typeInstalled = 0;
const typeUser = ( typeInstalled + 1 );
const typeBlank = ( typeUser + 1 );
const typeExisting = ( typeBlank + 1 );
const typeUnknown = ( typeExisting + 1 );
const typePackaged = ( typeUnknown + 1 );

// CWTemplateIntroductionType
const typeCopyAndEdit = 0;
const typeEdit = ( typeCopyAndEdit + 1 );
const typeNo = ( typeEdit + 1 );

// CWTaxExportOption
const typeTECAll = 0;
const typeTECM3 = ( typeTECAll + 1 );
const typeTECNoM3 = ( typeTECM3 + 1 );

// CWLockReturnType
const lrtSuccess = 0;
const lrtAlreadyLocked = 1;
const lrtBadClient = 2;
const lrtAlreadyOpened = 3;
const lrtBadLock = 4;

// CWUnLockReturnType
const urtSuccess = 0;
const urtNotLocked = 1;
const urtBadClient = 2;

// CWAutoCVRoundingType
const cvrtNone = 0;
const cvrtOnes = ( cvrtNone + 1 );
const cvrtThousands = ( cvrtOnes + 1 );
const cvrtMillions = ( cvrtThousands + 1 );
const cvrtBillions = ( cvrtMillions + 1 );
const cvrtTenThousands = ( cvrtBillions + 1 );
const cvrtHundredMillions = ( cvrtTenThousands + 1 );

// CWAutoCVRoundingBalanceType
const cwrConsolidated = 0;
const cwrReport = ( cwrConsolidated + 1 );
const cwrAdjusted = ( cwrReport + 1 );
const cwrUnadjusted = ( cwrAdjusted + 1 );
const cwrTaxFederal = ( cwrUnadjusted + 1 );
const cwrTaxState = ( cwrTaxFederal + 1 );
const cwrTaxCity = ( cwrTaxState + 1 );
const cwrConsolidatedInclOBA = ( cwrTaxCity + 1 );
const cwrReportInclOBA = ( cwrConsolidatedInclOBA + 1 );
const cwrAdjustedInclOBA = ( cwrReportInclOBA + 1 );
const cwrUnadjustedInclOBA = ( cwrAdjustedInclOBA + 1 );
const cwrTaxFederalInclOBA = ( cwrUnadjustedInclOBA + 1 );
const cwrTaxStateInclOBA = ( cwrTaxFederalInclOBA + 1 );
const cwrTaxCityInclOBA = ( cwrTaxStateInclOBA + 1 );

// CWOpenFlags
const ofNone = 0;
const ofLocked = 1;
const ofCompressed = 2;
const ofLockedCompressed = 3;
const ofVirtual = 2;
const ofLockedVirtual = 3;
const ofOmitIndex = 4;
const ofLockedOmitIndex = 5;
const ofVirtualOmitIndex = 6;
const ofLockedVirtualOmitIndex = 7;
const ofDecompressNetworkLocal = 8;
const ofOpenNetworkFirstTime = 16;

// CWRateType
const rtNA = 0;
const rtCurrent = ( rtNA + 1 );
const rtHistrorical = ( rtCurrent + 1 );

// CWCompressFlags
const cDefault = 0;
const cOmitBackups = 1;
const cOmitIndices = 2;
const cOmitBackupAndIndicies = 3;
const cCompressAllSubFolders = 4;

// CWOrderType
const otNone = 0;
const otAsending = ( otNone + 1 );
const otDescending = ( otAsending + 1 );

// CWConditionType
const cdtEqual = 0;
const cdtNotEqual = ( cdtEqual + 1 );
const cdtGreaterThan = ( cdtNotEqual + 1 );
const cdtLessThan = ( cdtGreaterThan + 1 );
const cdtGreaterAndEqualThan = ( cdtLessThan + 1 );
const cdtLessAndEqualThan = ( cdtGreaterAndEqualThan + 1 );

// CWSplitupPeriodType
const sptDefault = -1;
const sptPeriod1 = 1;
const sptPeriod2 = ( sptPeriod1 + 1 );
const sptPeriod3 = ( sptPeriod2 + 1 );
const sptPeriod4 = ( sptPeriod3 + 1 );
const sptPeriod5 = ( sptPeriod4 + 1 );
const sptPeriod6 = ( sptPeriod5 + 1 );
const sptPeriod7 = ( sptPeriod6 + 1 );
const sptPeriod8 = ( sptPeriod7 + 1 );
const sptPeriod9 = ( sptPeriod8 + 1 );
const sptPeriod10 = ( sptPeriod9 + 1 );
const sptPeriod11 = ( sptPeriod10 + 1 );
const sptPeriod12 = ( sptPeriod11 + 1 );
const sptPeriod13 = ( sptPeriod12 + 1 );

// CWSplitupPeriodTypeType
const spttDefault = 0;
const scpttThirteen = ( spttDefault + 1 );
const spttMonthly = ( scpttThirteen + 1 );
const spttBiMonthly = ( spttMonthly + 1 );
const spttQuarterly = ( spttBiMonthly + 1 );
const spttThirdly = ( spttQuarterly + 1 );
const spttSemiAnnualy = ( spttThirdly + 1 );
const spttYearly = ( spttSemiAnnualy + 1 );
const spttRandom = ( spttYearly + 1 );

// CWPathType
const ptClient = 0;
const ptTemplate = ( ptClient + 1 );
const ptDocumentLibrary = ( ptTemplate + 1 );
const ptSignOut = ( ptDocumentLibrary + 1 );
const ptCheckOut = ( ptSignOut + 1 );
const ptBackup = ( ptCheckOut + 1 );
const ptSmartSync = ( ptBackup + 1 );

// CWPurgeType
const pgtKeep = 0;
const pgtRemove = ( pgtKeep + 1 );

// CWCopyStructuresToType
const csttFirstAvailable = 0;
const csttStructure1 = ( csttFirstAvailable + 1 );
const csttStructure2 = ( csttStructure1 + 1 );
const csttStructure3 = ( csttStructure2 + 1 );

// CWAutoCVRoundingCurrentIncludeAdjustmentsTo
const cwraNotApplicable = 0;
const cwraMapNumber = ( cwraNotApplicable + 1 );
const cwraGroup1 = ( cwraMapNumber + 1 );
const cwraGroup2 = ( cwraGroup1 + 1 );
const cwraGroup3 = ( cwraGroup2 + 1 );
const cwraGroup4 = ( cwraGroup3 + 1 );
const cwraGroup5 = ( cwraGroup4 + 1 );
const cwraGroup6 = ( cwraGroup5 + 1 );
const cwraGroup7 = ( cwraGroup6 + 1 );
const cwraGroup8 = ( cwraGroup7 + 1 );
const cwraGroup9 = ( cwraGroup8 + 1 );
const cwraGroup10 = ( cwraGroup9 + 1 );

// CWAutoCVRoundingPriorIncludeAdjustmentsTo
const cwrapNotApplicable = 0;
const cwrapSameAsCurrent = ( cwrapNotApplicable + 1 );

// CWGroupingAccountType
const gatNA = 0;
const gatBalanceSheet = ( gatNA + 1 );
const gatIncomeStatement = ( gatBalanceSheet + 1 );
const gatStatementOfCashFlow = ( gatIncomeStatement + 1 );
const gatGroupPerformance = ( gatStatementOfCashFlow + 1 );

// CWDocumentDeleteFlag
const cwtDeleteNA = 0;
const cwtDeleteReferenceOnly = ( cwtDeleteNA + 1 );
const cwtDeleteReferenceAndDocument = ( cwtDeleteReferenceOnly + 1 );
const cwtDeleteToRecyclebin = ( cwtDeleteReferenceAndDocument + 1 );

// CWBalanceSourceColumn
const cwbColumn1 = 0;
const cwbColumn2 = ( cwbColumn1 + 1 );
const cwbColumn3 = ( cwbColumn2 + 1 );

// CWBalanceSourceType
const bstUserDefinedBAL = 0;
const bstForeignExchange = ( bstUserDefinedBAL + 1 );
const bstPeriodBalances = ( bstForeignExchange + 1 );
const bstOtherBasisAjustments = ( bstPeriodBalances + 1 );
const bstDetailedColumnInformation = ( bstOtherBasisAjustments + 1 );

// CWResponseType
const cwrProceed = 0;
const cwrCancel = ( cwrProceed + 1 );
const cwrSkip = ( cwrCancel + 1 );

// CWElementChangeType
const ectNA = 0;
const ectInsert = ( ectNA + 1 );
const ectModify = ( ectInsert + 1 );
const ectVersionUpdate = ectModify;
const ectDelete = ( ectVersionUpdate + 1 );
const ectRemap = ( ectDelete + 1 );
const ectRenumber = ectRemap;
const ectInsertAs = ( ectRenumber + 1 );
const ectVersionUpdateCV = ( ectInsertAs + 1 );

// CWElementUpdateStatus
const eusRequired = 0;
const eusOptional = ( eusRequired + 1 );
const eusDenied = ( eusOptional + 1 );

// CWTemplateUpdateComponent
const tucTemplate = 0;
const tucMap = ( tucTemplate + 1 );
const tucGroup1 = ( tucMap + 1 );
const tucGroup2 = ( tucGroup1 + 1 );
const tucGroup3 = ( tucGroup2 + 1 );
const tucGroup4 = ( tucGroup3 + 1 );
const tucGroup5 = ( tucGroup4 + 1 );
const tucGroup6 = ( tucGroup5 + 1 );
const tucGroup7 = ( tucGroup6 + 1 );
const tucGroup8 = ( tucGroup7 + 1 );
const tucGroup9 = ( tucGroup8 + 1 );
const tucGroup0 = ( tucGroup9 + 1 );
const tucDMStructure = ( tucGroup0 + 1 );
const tucPartA = ( tucDMStructure + 1 );
const tucPartB = ( tucPartA + 1 );
const tucPartC = ( tucPartB + 1 );

// CWLanguageComponentType
const lctMapping = 0;
const lctGroup1 = ( lctMapping + 1 );
const lctGroup2 = ( lctGroup1 + 1 );
const lctGroup3 = ( lctGroup2 + 1 );
const lctGroup4 = ( lctGroup3 + 1 );
const lctGroup5 = ( lctGroup4 + 1 );
const lctGroup6 = ( lctGroup5 + 1 );
const lctGroup7 = ( lctGroup6 + 1 );
const lctGroup8 = ( lctGroup7 + 1 );
const lctGroup9 = ( lctGroup8 + 1 );
const lctGroup10 = ( lctGroup9 + 1 );
const lctDocuments = ( lctGroup10 + 1 );
const lctAccounts = ( lctDocuments + 1 );

// CWSignInFlag
const sifNone = 0;
const sifCloseCompress = 1;
const sifKeepSignedout = 2;

// CWScriptExecuteFlag
const sefAll = 0;
const sefScript = 1;
const sefScriptFile = 2;
const sefURL = 3;

// CWDifferenceType
const difftypeTemporary = 0;
const difftypePermanent = ( difftypeTemporary + 1 );

// CWJournalApplyType
const japtNA = 0;
const japtAll = ( japtNA + 1 );
const japtGrouping1 = ( japtAll + 1 );
const japtGrouping2 = ( japtGrouping1 + 1 );
const japtGrouping3 = ( japtGrouping2 + 1 );
const japtGrouping4 = ( japtGrouping3 + 1 );
const japtGrouping5 = ( japtGrouping4 + 1 );
const japtGrouping6 = ( japtGrouping5 + 1 );
const japtGrouping7 = ( japtGrouping6 + 1 );
const japtGrouping8 = ( japtGrouping7 + 1 );
const japtGrouping9 = ( japtGrouping8 + 1 );
const japtGrouping10 = ( japtGrouping9 + 1 );
const japtTaxExportCode = ( japtGrouping10 + 1 );

// CWJournalBalanceType
const jbtNA = 0;
const jbtBudget = ( jbtNA + 1 );
const jbtForecast = ( jbtBudget + 1 );
const jbtCustom = ( jbtForecast + 1 );

// CWDocumentCustomBalanceType
const dcbtNA = 0;
const dcbtBudget = ( dcbtNA + 1 );
const dcbtForecast = ( dcbtBudget + 1 );
const dcbtCustom = ( dcbtForecast + 1 );
const dcbtAll = ( dcbtCustom + 1 );

// CWDocumentLanguageType
const langCurrent = 0;
const langSpecific = ( langCurrent + 1 );

// CWCustomYearType
const yctCurrent = 0;
const yctYear1 = ( yctCurrent + 1 );
const yctYear2 = ( yctYear1 + 1 );
const yctYear3 = ( yctYear2 + 1 );
const yctYear4 = ( yctYear3 + 1 );

// CWAJEBookedType
const ajbDefault = 0;
const ajbNotbooked = ( ajbDefault + 1 );
const ajbBooked = ( ajbNotbooked + 1 );

// CWGlobalGroupAutoSyncType
const syncTypeNone = 0;
const syncTypeAutoAssign = ( syncTypeNone + 1 );
const syncTypeAutoAssignOverwriteLocal = ( syncTypeAutoAssign + 1 );

// CWPriorYearType
const pytPrior1 = 1;
const pytPrior2 = ( pytPrior1 + 1 );
const pytPrior3 = ( pytPrior2 + 1 );
const pytPrior4 = ( pytPrior3 + 1 );

// CWDocumentSyncLock
const dslOpenNormal = 0;
const dslExpiredLock = ( dslOpenNormal + 1 );
const dslActiveLock = ( dslExpiredLock + 1 );
const dslPendingLock = ( dslActiveLock + 1 );
const dslOffline = ( dslPendingLock + 1 );
const dslInstanceLost = ( dslOffline + 1 );
const dslError = ( dslInstanceLost + 1 );
const dslNotExclusiveUse = ( dslError + 1 );
const dslAccessDenied = ( dslNotExclusiveUse + 1 );

// CWDocumentSyncLockCheck
const dslcError = 0;
const dslcOffline = ( dslcError + 1 );
const dslcNoLock = ( dslcOffline + 1 );
const dslcLockedByOtherUser = ( dslcNoLock + 1 );
const dslcLockedByThisUser = ( dslcLockedByOtherUser + 1 );
const dslcFormatError = ( dslcLockedByThisUser + 1 );
const dslcInstanceLost = ( dslcFormatError + 1 );
const dslcAccessDenied = ( dslcInstanceLost + 1 );

// CWDocumentSyncFrequency
const dsfDefault = 0;
const dsfAutomatic = ( dsfDefault + 1 );
const dsfOndemand = ( dsfAutomatic + 1 );
const dsfNever = ( dsfOndemand + 1 );

// CWMisstatementType
const mitNA = 0;
const mitFactual = ( mitNA + 1 );
const mitProjected = ( mitFactual + 1 );
const mitJudgmental = ( mitProjected + 1 );
const mitAll = ( mitJudgmental + 1 );

// CWSyncCopyStatus
const scstUnknown = -1;
const scstOffline = 0;
const scstOnline = 1;

// CWTaxExportCodeUserDefinedTypes
const userDefinedNone = 0;
const userDefinedStandard = ( userDefinedNone + 1 );
const userDefinedNonStandard = ( userDefinedStandard + 1 );

// CWCloudIntegrationType
const citError = -1;
const citNoIntegration = 0;
const citLicencing = 1;
const citFilelessBundle = 2;
const citSmartSync = 3;

// CWCloudIntegrationState
const cistError = -1;
const cistUnknown = 0;
const cistNotIntegrated = 1;
const cistIntegrated = 2;
const cistUnintegrated = 3;

// CWSecureConnectionType
const sctINDETERMINATE = 0;
const sctNONE = ( sctINDETERMINATE + 1 );
const sctHTTP = ( sctNONE + 1 );
const sctHTTPS = ( sctHTTP + 1 );

// CWCloudIntegrationFeatureType
const citftDisabled = 0;
const citfEnabledLicenceRequired = ( citftDisabled + 1 );
const citfEnabledLicenceNotRequired = ( citfEnabledLicenceRequired + 1 );

// CWRolesSignedOffType
const cwrNA = 0;
const cwrNotSinedOff = ( cwrNA + 1 );
const cwrSignedOffByMe = ( cwrNotSinedOff + 1 );
const cwrSignedOffAnyOne = ( cwrSignedOffByMe + 1 );
const cwrRequirementsCompliance = ( cwrSignedOffAnyOne + 1 );
const cwrMultipleSignOffs = ( cwrRequirementsCompliance + 1 );

// CWMultipleSignOffType
const cwmtNA = 0;
const cwmtNoOne = ( cwmtNA + 1 );
const cwmtCurrentUser = ( cwmtNoOne + 1 );
const cwmtAnyOne = ( cwmtCurrentUser + 1 );
const cwmtCanSignOff = ( cwmtAnyOne + 1 );

// CWCompletionType
const cwcNA = 0;
const cwcNotStarted = ( cwcNA + 1 );
const cwcInProgress = ( cwcNotStarted + 1 );
const cwcNotCompleted = ( cwcInProgress + 1 );
const cwcComplete = ( cwcNotCompleted + 1 );

// CWAssignToType
const cwaNA = 0;
const cwaAssignToMe = ( cwaNA + 1 );

// CWBooleanType
const cwbNA = 0;
const cwbYes = ( cwbNA + 1 );
const cwbNo = ( cwbYes + 1 );

// CWMultipleDocType
const cwmNone = 0;
const cwmAutomatic = 0x1;
const cwmCaseView = 0x2;
const cwmExternal = 0x4;
const cwmManual = 0x8;
const cwmPlacehoder = 0x10;

// CWMultipleContainsType
const cwnNone = 0;
const cwmTickmarks = 0x1;
const cwmnotes = 0x2;
const cwmCommentaryText = 0x4;
const cwmDocumentReference = 0x8;

// CWAssignedIssueType
const cwAssignedNone = 0;
const cwAssignedToMe = 0x1;
const cwCompleted = 0x2;
const cwUncleared = 0x4;
const cwAny = 0x8;

// CWEntitySelectType
const cweNA = 0;
const cweMultiple = ( cweNA + 1 );
const cweDefaultContext = ( cweMultiple + 1 );
const cweSpecificEntities = ( cweDefaultContext + 1 );

// CWIssueDocumentStatusFilterType
const cwIssueDocStatusFilt_NotStarted = 0x1;
const cwIssueDocStatusFilt_InProgress = 0x2;
const cwIssueDocStatusFilt_Waiting = 0x4;
const cwIssueDocStatusFilt_Deferred = 0x8;
const cwIssueDocStatusFilt_Completed = 0x10;
const cwIssueDocStatusFilt_Cleared = 0x20;

// CWIssueUserType
const cwiNone = 0;
const cwiEveryone = ( cwiNone + 1 );

// CWIncludeAdjustmentsApplyType
const iadatNotApplicable = 0;
const iadatMapping = 1;
const iadatGroup1 = 2;
const iadatGroup2 = 3;
const iadatGroup3 = 4;
const iadatGroup4 = 5;
const iadatGroup5 = 6;
const iadatGroup6 = 7;
const iadatGroup7 = 8;
const iadatGroup8 = 9;
const iadatGroup9 = 10;
const iadatGroup10 = 11;

// CWProfileIndexType
const pitProfile1 = 0;
const pitProfile2 = 1;
const pitProfile3 = 2;
const pitProfile4 = 3;
const pitProfile5 = 4;
const pitProfile6 = 5;
const pitProfile7 = 6;
const pitProfile8 = 7;
const pitProfile9 = 8;
const pitProfile10 = 10;
const pitNoProfile = 11;
const pitDefaultProfile = 12;

// CWCurrencySymbolPositionType
const csptLeft = 0;
const csptRight = 1;
const csptLeftWithSpace = 2;
const csptRightWithSpace = 3;
const csptRegional = 4;

// CWDocumentNumberFormatType
const dnftDefault = 0;
const dnftWithoutPageNumber = 1;
const dnftPage = 2;
const dnftPageTotal = 3;
const dnftPageofTotal = 4;

// CWMaterialityDisplayLevelType
const mdltDisplayOnly = 0;
const mdltDisplayandPrint = 1;
const mdltHide = 2;

